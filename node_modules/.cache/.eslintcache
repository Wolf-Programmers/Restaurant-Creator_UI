[{"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/index.js":"1","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/App.js":"2","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/reportWebVitals.js":"3","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantList.js":"4","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Register.js":"5","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Login.js":"6","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/AddMenu.js":"7","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Header.js":"8","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantSearch.js":"9","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Cupoun.js":"10","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantDetails.js":"11","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/AddItem.js":"12","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/AddItemToMenu.js":"13","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageMenu.js":"14","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageRestaurant.js":"15","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/AddEmployee.js":"16","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageEmployee.js":"17","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/AddRestaurant.js":"18","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/EditRestaurant.js":"19"},{"size":633,"mtime":1650648342420,"results":"20","hashOfConfig":"21"},{"size":1466,"mtime":1653598874931,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1650451718000,"results":"23","hashOfConfig":"21"},{"size":4322,"mtime":1653562536673,"results":"24","hashOfConfig":"21"},{"size":4458,"mtime":1653562536672,"results":"25","hashOfConfig":"21"},{"size":3344,"mtime":1653562599577,"results":"26","hashOfConfig":"21"},{"size":3919,"mtime":1653498865751,"results":"27","hashOfConfig":"21"},{"size":1962,"mtime":1653562482136,"results":"28","hashOfConfig":"21"},{"size":1577,"mtime":1653403846018,"results":"29","hashOfConfig":"21"},{"size":3022,"mtime":1652469176117,"results":"30","hashOfConfig":"21"},{"size":5710,"mtime":1653598985438,"results":"31","hashOfConfig":"21"},{"size":5624,"mtime":1653493279158,"results":"32","hashOfConfig":"21"},{"size":4413,"mtime":1653503826645,"results":"33","hashOfConfig":"21"},{"size":345,"mtime":1653592333353,"results":"34","hashOfConfig":"21"},{"size":3235,"mtime":1653601208964,"results":"35","hashOfConfig":"21"},{"size":5080,"mtime":1653593109232,"results":"36","hashOfConfig":"21"},{"size":240,"mtime":1653593259888,"results":"37","hashOfConfig":"21"},{"size":13002,"mtime":1653598533580,"results":"38","hashOfConfig":"21"},{"size":14733,"mtime":1653600581983,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"uicf14",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"47"},"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/index.js",[],[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/App.js",[],[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/reportWebVitals.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantList.js",["107","108","109"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Register.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Login.js",[],[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/AddMenu.js",["110","111","112"],[],"import { Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {useNavigate} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\n\nfunction AddMenu()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [creatorId, setCreatorId]=useState(user.id)\n    const [name, setName]=useState(\"\")\n    const [menuTypeId, setMenuTypeId]=useState(\"1\")\n    const [restaurants, setRestaurants]=useState([])\n    const [restaurantId, setRestaurantId]=useState(\"\")\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://localhost:8080/restaurant/get-restaurants?ownerId=\" + user.id);\n        \n            data = await data.json()\n            console.warn(data)\n            console.warn(data.value)\n            data = data.value\n            setRestaurants(data)\n        }\n        fetchData();\n        console.warn(JSON.stringify(restaurants))\n    },[]);\n\n    async function create(){\n        let item={creatorId, name, menuTypeId, restaurantId}\n        console.warn(item)\n\n        let result = await fetch(\"http://localhost:8080/menu/create/\",{\n            method:'POST',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n        }\n        else{\n            console.warn(result) \n            console.warn(result.errorList)\n        }\n    }\n\n    return(\n        <div>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12}><h2>Dodaj menu</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Restauracja</Form.Label>\n                                <Form.Select value={restaurantId} onChange={(e)=>setRestaurantId(e.target.value)}>\n                                <option>Wybierz</option>\n                                { restaurants.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ</Form.Label>\n                                <Form.Select value={menuTypeId} onChange={(e)=>setMenuTypeId(e.target.value)}>\n                                <option value=\"1\">Burger</option>\n                                <option value=\"2\">Kebab</option>\n                                <option value=\"3\">Pizza</option>\n                                <option value=\"4\">Deser</option>\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default AddMenu",[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Header.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantSearch.js",["113"],[],"import { Button, Container, Row, Col, Form} from \"react-bootstrap\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch} from '@fortawesome/free-solid-svg-icons';\nimport {useNavigate } from 'react-router-dom';\nimport React, {useState, useEffect} from \"react\";\nimport Header from './Header';\n\nfunction RestaurantSearch(){\n\n\n    let navigate = useNavigate();\n    const [city, setCity]=useState(\"\")\n\n    function searchCity(){\n        localStorage.setItem(\"city\",city)\n        navigate('/restaurant')\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container fluid>\n                <Row>\n                    <Col>\n                    <div className=\"login-bg\">\n                        <div className=\"bg-mute\">\n                        <div className=\"search-box\">\n                            <Col className=\"mb-4\"><h2>Znajdź restaurację w swojej okolicy</h2></Col>\n                            <Col>\n                                <Form.Control type=\"text\" value={city} onChange={(e)=>setCity(e.target.value)} className=\"search-bar\" placeholder=\"Szukaj...\" />\n                                <Button variant=\"danger\" className=\"search-icon\" onClick={searchCity}><FontAwesomeIcon icon={faSearch} /></Button>\n                            </Col>\n                        </div>\n                        </div>\n                    </div>\n                    </Col>\n                </Row>\n            </Container> \n            <Container>\n               \n            </Container>\n        </div>\n    )\n}\n\nexport default RestaurantSearch","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Cupoun.js",["114","115","116","117"],[],"import { Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {useNavigate} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\n\nfunction Cupoun()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [cuponCode, setcuponCode]=useState(\"\")\n    const [maxUse, setmaxUse]=useState(\"\")\n    const [id, setId]=useState(\"\")\n    const [typeSelected, setTypeSelected]=useState()\n\n\n\n    async function create(){\n\n        let restaurant = await fetch(\"http://localhost:8080/restaurant/info?id=\" + id);\n        restaurant= await restaurant.json()\n        restaurant = await restaurant.value\n        console.warn(restaurant)\n\n        let item={cuponCode, maxUse, restaurant}\n        console.warn(item)\n\n        let result = await fetch(\"http://localhost:8080/cupon/cupon-create/\",{\n            method:'Post',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            navigate('/')\n        }\n        else{\n            console.warn(result) \n            console.warn(result.errorList) \n        }\n    }\n\n    return(\n        <div>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12}><h2>Dodaj kupon</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Kod rabatowy</Form.Label>\n                                <Form.Control type=\"input\" value={cuponCode} onChange={(e)=>setcuponCode(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Kij to wie(maxUse)</Form.Label>\n                                <Form.Control type=\"input\" value={maxUse} onChange={(e)=>setmaxUse(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">RESTAURACJA</Form.Label>\n                                <Form.Control type=\"input\" value={id} onChange={(e)=>setId(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default Cupoun","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantDetails.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131"],[],"import { Button, Container, Row, Col} from \"react-bootstrap\"\nimport React, { useEffect , useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Header from './Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMapLocation, faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport {useNavigate } from 'react-router-dom';\n\nfunction RestaurantDetails(props)\n{   \n    let navigate = useNavigate();\n    let {id} = useParams();\n    const [restaurant, setRestaurant]=useState({})\n    const [opening, setOpening]=useState([])\n    const [menu, setMenu]=useState([])\n\n    const [customerName, setCustomerName]=useState(\"\")\n    const [customerCity, setCustomerCity]=useState(\"\")\n    const [customerAddress, setCustomerAddress]=useState(\"\")\n    const [totalPrice, setTotalPrice]=useState(\"\")\n    const [cupouCode, setCupouCode]=useState(\"\")\n    const [itemList, setItemList]=useState([])\n    const [restaurantId, setRestaurantId]=useState(\"\")\n    \n    function today(day){\n        var weekdays = new Array(8);\n        weekdays[0] = \"Niedziela\";\n        weekdays[1] = \"Poniedziałek\";\n        weekdays[2] = \"Wtorek\";\n        weekdays[3] = \"Środa\";\n        weekdays[4] = \"Czwartek\";\n        weekdays[5] = \"Piątek\";\n        weekdays[6] = \"Sobota\";\n        weekdays[7] = \"Niedziela\";\n        return weekdays[day]\n    }\n    \n    function addItem(position, price){\n        console.warn(\"sdsa\")\n    }\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/info?id=\" + id);\n            data = await data.json()\n            console.warn(data.value)\n\n            if(data.status === 1){\n                data = await data.value\n                setRestaurant(data)\n                setOpening(data.openingPeriod)\n            }\n            else {\n                navigate('/restaurant')\n            }\n        \n        }\n        async function fetchMenuData(){\n            let data = await fetch(\"http://localhost:8080/menu/show-restaurant-menus?restaurantId=\" + id);\n                data = await data.json()\n                console.warn(data.value)\n                console.warn(data)\n                if(data.status === 1){\n                    data = await data.value\n                    setMenu(data)\n                }\n                else {\n                    \n                }\n            \n            }\n        fetchData();\n        fetchMenuData();\n        console.warn(JSON.stringify(restaurant))\n    },[]);\n\n    function test(){\n        console.warn(itemList)\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container>\n            <Row className=\"mt-4\">\n                <Col sm={12}>\n                <h1>{restaurant.name}</h1>\n                </Col>\n                <Col md={12}>\n                <h5><FontAwesomeIcon icon={faMapLocation} /> ul.{restaurant.address}, {restaurant.city}</h5>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faPhone} /> {restaurant.phoneNumber}</h6>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faEnvelope} /> {restaurant.email}</h6>\n                </Col>\n                <Col md={12} className=\"mt-4\">\n                <h4>Godziny Otwarcia</h4>\n                {opening.map((item)=>\n                <Row key={item.dayOfWeek} className=\"justify-content-center\" >\n                    <Col sm={12} md={4} >\n                        <h6 className=\"float-md-end\">{today(item.dayOfWeek)}:</h6>\n                    </Col>\n                    <Col sm={12} md={4}>\n                        <h6 className=\"float-md-start\">{item.from} - {item.to}</h6>\n                    </Col>\n                </Row>\n                )}\n                </Col>\n            </Row>\n            <Row className=\"mt-4 justify-content-center\">\n                <Col md={12} className=\"mt-5\">\n                <h1>Menu</h1>\n                {menu.map((type)=>\n                <Row className=\"mb-4 justify-content-center\">\n                    <Col sm={12} md={8} >\n                    <h3 className=\"float-md-start\">{type.menuName}</h3>\n                    </Col>\n                    <Col sm={12} md={2} >\n                        <p className=\"float-md-end\">{type.menuTypeName}</p>\n                    </Col>\n                    <div className=\"clearfix\"></div>\n                    {type.itemsList.map((item)=>\n                    <Row className=\"mb-3 justify-content-center\">\n                        <Col sm={12} md={6} >\n                            <h6 className=\"float-md-start\">{item.title}</h6>\n                        </Col>\n                        <Col sm={12} md={2} >\n                            <p className=\"float-md-end\">{item.quantity}{item.unit}</p>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8} >\n                            <h6>Cena: {item.price} zł</h6>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8} >\n                            <p>{item.describe}</p>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Button variant=\"danger\" className=\"float-end\" onClick={addItem(item.id, item.price)}>Więcej</Button>\n                        </Col>\n                    </Row>\n                    )}\n                </Row>\n                )}\n                </Col>\n                </Row>\n                <Button variant=\"danger\" onClick={test}>Więcej</Button>\n            </Container>\n        </div>\n    )\n}\n\nexport default RestaurantDetails","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/AddItem.js",["132","133"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/AddItemToMenu.js",["134","135","136","137","138","139","140","141"],[],"import { Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {useNavigate} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\n\nfunction AddItemToMenu()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [item, setItem]=useState([])\n    const [itemId, setItemId]=useState(\"\")\n    const [restaurants, setRestaurants]=useState([])\n    const [restaurantId, setRestaurantId]=useState(\"\")\n    const [menu, setMenu]=useState([])\n    const [menuId, setMenuId]=useState(\"1\")\n\n    useEffect (()=>{\n        async function fetchItemData(){\n        let data = await fetch(\"http://localhost:8080/restaurant/get-restaurants?ownerId=\" + user.id);\n        \n            data = await data.json()\n            console.warn(data)\n            console.warn(data.value)\n            data = data.value\n            setRestaurants(data)\n        }\n        async function fetchRestaurantData(){\n            let data = await fetch(\"http://localhost:8080/restaurant/get-restaurants?ownerId=\" + user.id);\n            \n                data = await data.json()\n                console.warn(data)\n                console.warn(data.value)\n                data = data.value\n                setRestaurants(data)\n        }\n        async function fetchMenuData(){\n                let data = await fetch(\"http://localhost:8080/restaurant/get-restaurants?ownerId=\" + user.id);\n                \n                    data = await data.json()\n                    console.warn(data)\n                    console.warn(data.value)\n                    data = data.value\n                    setRestaurants(data)\n        }\n        fetchRestaurantData();\n        console.warn(JSON.stringify(restaurants))\n    },[]);\n\n    async function create(){\n        let item={itemId, restaurantId, menuId}\n        console.warn(item)\n\n        let result = await fetch(\"http://localhost:8080/menu/add-item/\",{\n            method:'POST',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n        }\n        else{\n            console.warn(result) \n            console.warn(result.errorList)\n        }\n    }\n\n    return(\n        <div>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12}><h2>Dodaj do menu</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Restauracja</Form.Label>\n                                <Form.Select value={restaurantId} onChange={(e)=>setRestaurantId(e.target.value)}>\n                                <option>Wybierz</option>\n                                { restaurants.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Menu</Form.Label>\n                                <Form.Control type=\"input\" value={menuId} onChange={(e)=>setMenuId(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Pozycja</Form.Label>\n                                <Form.Control type=\"input\" value={itemId} onChange={(e)=>setItemId(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default AddItemToMenu","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageMenu.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageRestaurant.js",["142","143"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/AddEmployee.js",["144","145"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageEmployee.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/AddRestaurant.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/EditRestaurant.js",["146","147"],[],"import { Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {useNavigate, Link, useParams} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction EditRestaurant(props)\n{\n    \n    let navigate = useNavigate();\n    let {id} = useParams();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [city, setCity]=useState(\"\")\n    const [address, setAddress]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [voivodeship, setVoivodeship]=useState(\"\")\n    const [monO, setMonO]=useState(\"\")\n    const [tueO, setTueO]=useState(\"\")\n    const [wedO, setWedO]=useState(\"\")\n    const [thuO, setThuO]=useState(\"\")\n    const [friO, setFriO]=useState(\"\")\n    const [satO, setSatO]=useState(\"\")\n    const [sunO, setSunO]=useState(\"\")\n    const [monC, setMonC]=useState(\"\")\n    const [tueC, setTueC]=useState(\"\")\n    const [wedC, setWedC]=useState(\"\")\n    const [thuC, setThuC]=useState(\"\")\n    const [friC, setFriC]=useState(\"\")\n    const [satC, setSatC]=useState(\"\")\n    const [sunC, setSunC]=useState(\"\")\n    const [type, setType]=useState([])\n    const [typeSelected, setTypeSelected]=useState()\n\n    useEffect (()=>{\n        async function fetchRestaurantData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/restaurant/info?id=\" + id);\n                data = await data.json()\n                console.warn(data.value)\n    \n                if(data.status === 1){\n                    data = await data.value\n                    setName(data.name)\n                    setCity(data.city)\n                    setAddress(data.address)\n                    setPhone(data.phoneNumber)\n                    setEmail(data.email)\n                    setVoivodeship(data.voivodeship)\n                    setMonO(data.openingPeriod[0].from)\n                    setTueO(data.openingPeriod[1].from)\n                    setWedO(data.openingPeriod[2].from)\n                    setThuO(data.openingPeriod[3].from)\n                    setFriO(data.openingPeriod[4].from)\n                    setMonC(data.openingPeriod[0].to)\n                    setTueC(data.openingPeriod[1].to)\n                    setWedC(data.openingPeriod[2].to)\n                    setThuC(data.openingPeriod[3].to)\n                    setFriC(data.openingPeriod[4].to)\n                    {   if(data.openingPeriod.length > 5){\n                            setSatO(data.openingPeriod[5].from)\n                            setSunO(data.openingPeriod[6].from)\n                            setSatC(data.openingPeriod[5].to)\n                            setSunC(data.openingPeriod[6].to)\n                    }}\n                    setTypeSelected(data.restaurantTypes[0].id)\n                }\n                else {\n                    navigate('/restaurant')\n                }\n            \n            }\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-types\");\n            data = await data.json()\n            console.warn(data)\n            data = await data.value\n            console.warn(data)\n        setType(data)\n        }\n        fetchData();\n        fetchRestaurantData()\n    },[]);\n\n    async function create(){\n\n        let openingTimes = [\n            {\n                \"dayOfWeek\":1,\n                \"from\":monO,\n                \"to\":monC,\n            },\n            {\n                \"dayOfWeek\":2,\n                \"from\":tueO,\n                \"to\":tueC,\n            },\n            {\n                \"dayOfWeek\":3,\n                \"from\":wedO,\n                \"to\":wedC,\n            },\n            {\n                \"dayOfWeek\":4,\n                \"from\":thuO,\n                \"to\":thuC,\n            },\n            {\n                \"dayOfWeek\":5,\n                \"from\":friO,\n                \"to\":friC,\n            },\n            {\n                \"dayOfWeek\":6,\n                \"from\":satO,\n                \"to\":satC,\n            },\n            {\n                \"dayOfWeek\":7,\n                \"from\":sunO,\n                \"to\":sunC,\n            },\n\n        ]\n\n        let owner = user.id\n        let cuisine = parseInt(typeSelected)\n        let restaurantTypesList = [{id:cuisine}]\n        let item={owner, name, city, address, phoneNumber, email, voivodeship, openingTimes, restaurantTypesList}\n        console.warn(item)\n\n        let result = await fetch(\"http://creator.azurewebsites.net/restaurant/add/\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            navigate('/')\n        }\n        else{\n            console.warn(result) \n            console.warn(result.errorList) \n            console.warn(type)   \n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                <Col sm={12} md={10}>\n                        <Link to=\"/manage/restaurant\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Dodaj restaurację</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa restauracji</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ kuchni</Form.Label>\n                                <Form.Select aria-label=\"Default select example\" value={typeSelected} onChange={(e)=>setTypeSelected(e.target.value)}>\n                                    <option>Wybierz</option>\n                                    {\n                                        type.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres</Form.Label>\n                                <Form.Control type=\"input\" value={address} onChange={(e)=>setAddress(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Miasto</Form.Label>\n                                <Form.Control type=\"input\" value={city} onChange={(e)=>setCity(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Województwo</Form.Label>\n                                <Form.Control type=\"input\" value={voivodeship} onChange={(e)=>setVoivodeship(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                           <h5 className=\"mt-2\">Godziny otwarcia</h5>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Poniedziałek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                    <Col sm={5}><Form.Control type=\"input\" value={monO} onChange={(e)=>setMonO(e.target.value)}/></Col>\n                                    -\n                                    <Col sm={5}><Form.Control type=\"input\" value={monC} onChange={(e)=>setMonC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Wtorek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"input\" value={tueO} onChange={(e)=>setTueO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"input\" value={tueC} onChange={(e)=>setTueC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Środa</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"input\" value={wedO} onChange={(e)=>setWedO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"input\" value={wedC} onChange={(e)=>setWedC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Czwartek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"input\" value={thuO} onChange={(e)=>setThuO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"input\" value={thuC} onChange={(e)=>setThuC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Piątek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"input\" value={friO} onChange={(e)=>setFriO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"input\" value={friC} onChange={(e)=>setFriC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                            <Form.Label className=\"float-start\">Sobota</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"input\" value={satO} onChange={(e)=>setSatO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"input\" value={satC} onChange={(e)=>setSatC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Niedziela</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"input\" value={sunO} onChange={(e)=>setSunO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"input\" value={sunC} onChange={(e)=>setSunC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Opis</Form.Label>\n                                <Form.Control as=\"textarea\" rows={3} />\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Zdjecie</Form.Label>\n                                <Form.Control type=\"file\" />\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default EditRestaurant",{"ruleId":"148","severity":1,"message":"149","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":10,"column":9,"nodeType":"150","messageId":"151","endLine":10,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":33,"column":7,"nodeType":"155","endLine":33,"endColumn":9,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"157","line":8,"column":9,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"148","severity":1,"message":"158","line":10,"column":23,"nodeType":"150","messageId":"151","endLine":10,"endColumn":35},{"ruleId":"153","severity":1,"message":"159","line":28,"column":7,"nodeType":"155","endLine":28,"endColumn":9,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":5,"column":26,"nodeType":"150","messageId":"151","endLine":5,"endColumn":35},{"ruleId":"148","severity":1,"message":"161","line":3,"column":16,"nodeType":"150","messageId":"151","endLine":3,"endColumn":25},{"ruleId":"148","severity":1,"message":"162","line":9,"column":9,"nodeType":"150","messageId":"151","endLine":9,"endColumn":13},{"ruleId":"148","severity":1,"message":"163","line":13,"column":12,"nodeType":"150","messageId":"151","endLine":13,"endColumn":24},{"ruleId":"148","severity":1,"message":"164","line":13,"column":26,"nodeType":"150","messageId":"151","endLine":13,"endColumn":41},{"ruleId":"148","severity":1,"message":"165","line":17,"column":12,"nodeType":"150","messageId":"151","endLine":17,"endColumn":24},{"ruleId":"148","severity":1,"message":"166","line":17,"column":26,"nodeType":"150","messageId":"151","endLine":17,"endColumn":41},{"ruleId":"148","severity":1,"message":"167","line":18,"column":12,"nodeType":"150","messageId":"151","endLine":18,"endColumn":24},{"ruleId":"148","severity":1,"message":"168","line":18,"column":26,"nodeType":"150","messageId":"151","endLine":18,"endColumn":41},{"ruleId":"148","severity":1,"message":"169","line":19,"column":12,"nodeType":"150","messageId":"151","endLine":19,"endColumn":27},{"ruleId":"148","severity":1,"message":"170","line":19,"column":29,"nodeType":"150","messageId":"151","endLine":19,"endColumn":47},{"ruleId":"148","severity":1,"message":"171","line":20,"column":12,"nodeType":"150","messageId":"151","endLine":20,"endColumn":22},{"ruleId":"148","severity":1,"message":"172","line":20,"column":24,"nodeType":"150","messageId":"151","endLine":20,"endColumn":37},{"ruleId":"148","severity":1,"message":"173","line":21,"column":12,"nodeType":"150","messageId":"151","endLine":21,"endColumn":21},{"ruleId":"148","severity":1,"message":"174","line":21,"column":23,"nodeType":"150","messageId":"151","endLine":21,"endColumn":35},{"ruleId":"148","severity":1,"message":"175","line":22,"column":22,"nodeType":"150","messageId":"151","endLine":22,"endColumn":33},{"ruleId":"148","severity":1,"message":"176","line":23,"column":12,"nodeType":"150","messageId":"151","endLine":23,"endColumn":24},{"ruleId":"148","severity":1,"message":"177","line":23,"column":26,"nodeType":"150","messageId":"151","endLine":23,"endColumn":41},{"ruleId":"153","severity":1,"message":"178","line":75,"column":7,"nodeType":"155","endLine":75,"endColumn":9,"suggestions":"179"},{"ruleId":"148","severity":1,"message":"157","line":8,"column":9,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"153","severity":1,"message":"159","line":31,"column":7,"nodeType":"155","endLine":31,"endColumn":9,"suggestions":"180"},{"ruleId":"148","severity":1,"message":"157","line":8,"column":9,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"148","severity":1,"message":"181","line":10,"column":12,"nodeType":"150","messageId":"151","endLine":10,"endColumn":16},{"ruleId":"148","severity":1,"message":"182","line":10,"column":18,"nodeType":"150","messageId":"151","endLine":10,"endColumn":25},{"ruleId":"148","severity":1,"message":"183","line":14,"column":12,"nodeType":"150","messageId":"151","endLine":14,"endColumn":16},{"ruleId":"148","severity":1,"message":"184","line":14,"column":18,"nodeType":"150","messageId":"151","endLine":14,"endColumn":25},{"ruleId":"148","severity":1,"message":"185","line":18,"column":24,"nodeType":"150","messageId":"151","endLine":18,"endColumn":37},{"ruleId":"148","severity":1,"message":"186","line":36,"column":24,"nodeType":"150","messageId":"151","endLine":36,"endColumn":37},{"ruleId":"153","severity":1,"message":"159","line":47,"column":7,"nodeType":"155","endLine":47,"endColumn":9,"suggestions":"187"},{"ruleId":"148","severity":1,"message":"157","line":10,"column":9,"nodeType":"150","messageId":"151","endLine":10,"endColumn":17},{"ruleId":"153","severity":1,"message":"159","line":26,"column":7,"nodeType":"155","endLine":26,"endColumn":9,"suggestions":"188"},{"ruleId":"148","severity":1,"message":"161","line":3,"column":16,"nodeType":"150","messageId":"151","endLine":3,"endColumn":25},{"ruleId":"148","severity":1,"message":"162","line":9,"column":9,"nodeType":"150","messageId":"151","endLine":9,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":61,"column":21,"nodeType":"191","messageId":"192","endLine":66,"endColumn":23},{"ruleId":"153","severity":1,"message":"193","line":84,"column":7,"nodeType":"155","endLine":84,"endColumn":9,"suggestions":"194"},"no-unused-vars","'faSearch' is defined but never used.","Identifier","unusedVar","'today' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city' and 'restaurants'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'navigate' is assigned a value but never used.","'setCreatorId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'restaurants' and 'user.id'. Either include them or remove the dependency array.",["196"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","'typeSelected' is assigned a value but never used.","'setTypeSelected' is assigned a value but never used.","'customerName' is assigned a value but never used.","'setCustomerName' is assigned a value but never used.","'customerCity' is assigned a value but never used.","'setCustomerCity' is assigned a value but never used.","'customerAddress' is assigned a value but never used.","'setCustomerAddress' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'setTotalPrice' is assigned a value but never used.","'cupouCode' is assigned a value but never used.","'setCupouCode' is assigned a value but never used.","'setItemList' is assigned a value but never used.","'restaurantId' is assigned a value but never used.","'setRestaurantId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'navigate', and 'restaurant'. Either include them or remove the dependency array.",["197"],["198"],"'item' is assigned a value but never used.","'setItem' is assigned a value but never used.","'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'fetchItemData' is defined but never used.","'fetchMenuData' is defined but never used.",["199"],["200"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["201"],{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"204","fix":"208"},{"desc":"204","fix":"209"},{"desc":"204","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [city, restaurants]",{"range":"213","text":"214"},"Update the dependencies array to be: [restaurants, user.id]",{"range":"215","text":"216"},"Update the dependencies array to be: [id, navigate, restaurant]",{"range":"217","text":"218"},{"range":"219","text":"216"},{"range":"220","text":"216"},{"range":"221","text":"216"},"Update the dependencies array to be: [id, navigate]",{"range":"222","text":"223"},[980,982],"[city, restaurants]",[964,966],"[restaurants, user.id]",[2528,2530],"[id, navigate, restaurant]",[1096,1098],[1754,1756],[957,959],[3437,3439],"[id, navigate]"]