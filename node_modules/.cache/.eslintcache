[{"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/index.js":"1","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/App.js":"2","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/reportWebVitals.js":"3","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantList.js":"4","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Register.js":"5","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Login.js":"6","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Header.js":"7","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantSearch.js":"8","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantDetails.js":"9","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageMenu.js":"10","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageRestaurant.js":"11","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/AddEmployee.js":"12","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageEmployee.js":"13","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/AddRestaurant.js":"14","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/EditRestaurant.js":"15","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItemToMenu.js":"16","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItem.js":"17","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddMenu.js":"18","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Basket.js":"19","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Product.js":"20","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/EditEmployee.js":"21","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageCupoun.js":"22"},{"size":420,"mtime":1655215703420,"results":"23","hashOfConfig":"24"},{"size":2623,"mtime":1655218982245,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1653601360000,"results":"26","hashOfConfig":"24"},{"size":3133,"mtime":1655219542678,"results":"27","hashOfConfig":"24"},{"size":6769,"mtime":1655217132195,"results":"28","hashOfConfig":"24"},{"size":4599,"mtime":1655216159153,"results":"29","hashOfConfig":"24"},{"size":2125,"mtime":1655217183098,"results":"30","hashOfConfig":"24"},{"size":2256,"mtime":1655218992456,"results":"31","hashOfConfig":"24"},{"size":7016,"mtime":1654466131100,"results":"32","hashOfConfig":"24"},{"size":368,"mtime":1653767514166,"results":"33","hashOfConfig":"24"},{"size":4128,"mtime":1655217839588,"results":"34","hashOfConfig":"24"},{"size":8348,"mtime":1654447980724,"results":"35","hashOfConfig":"24"},{"size":5105,"mtime":1655217989781,"results":"36","hashOfConfig":"24"},{"size":14432,"mtime":1654448161676,"results":"37","hashOfConfig":"24"},{"size":16252,"mtime":1654496062244,"results":"38","hashOfConfig":"24"},{"size":5789,"mtime":1654447980732,"results":"39","hashOfConfig":"24"},{"size":7021,"mtime":1654447980730,"results":"40","hashOfConfig":"24"},{"size":4947,"mtime":1654447980734,"results":"41","hashOfConfig":"24"},{"size":2305,"mtime":1654465613362,"results":"42","hashOfConfig":"24"},{"size":1017,"mtime":1654027108571,"results":"43","hashOfConfig":"24"},{"size":8507,"mtime":1654496396961,"results":"44","hashOfConfig":"24"},{"size":5241,"mtime":1654498153787,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"bm33hd",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/index.js",[],[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/App.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/reportWebVitals.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantList.js",["125","126"],[],"import { Button, Container, Row, Col} from \"react-bootstrap\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faMapLocation, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport React, { useEffect , useState} from \"react\";\nimport Header from './Header';\n\nfunction RestaurantList()\n{   \n    let city = localStorage.getItem('city')\n\n    const [restaurants, setRestaurants]=useState([])\n    \n    \n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/info-city?city=\" + city);\n            data = await data.json()\n            console.warn(data.value)\n\n            if(data.status === 1){\n                data = await data.value\n                setRestaurants(data)\n            }\n            else {\n\n            }\n        \n        }\n        fetchData();\n        console.warn(JSON.stringify(restaurants))\n    },[]);\n\n    return(\n        <div>\n            <Header/>\n            <Container>\n                <Row className=\"justify-content-center mt-4\">\n                    <Col>\n                    <h1>Lista Restauracji </h1>\n                  </Col>\n                </Row>\n            </Container>\n            <div className=\"clearfix\"></div>\n            <Container className=\"mt-5\">\n                <Row>\n                    { restaurants.map((item)=>\n                    <Row key={item.id} className=\"justify-content-center restaurant-card\">\n                        <Col md={3}>\n                            <img className=\"restaurant-img\" src=\"https://images.unsplash.com/photo-1600891964599-f61ba0e24092?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cmVzdGF1cmFudCUyMGZvb2R8ZW58MHx8MHx8&w=1000&q=80\" alt=\"Zdjecie restauracji\"/>\n                        </Col>\n                        <Col md={7}>\n                            <Row>\n                                <Col className=\"mb-4\" md={8}>\n                                    <h2>{item.name}</h2>\n                                </Col>\n                                 <Col md={4}>\n                                 {item.restaurantTypes[0].name}\n                                 </Col>\n                                <Col>\n                                    <h6><FontAwesomeIcon icon={faMapLocation} /> ul.{item.address}, {item.city}</h6>\n                                 </Col>\n                                 <Col>\n                                    <h6><FontAwesomeIcon icon={faPhone} />{item.phoneNumber}</h6>\n                                 </Col>\n                                 <Col md={12}>\n                                    <div className=\"mb-5\"></div>\n                                 </Col>\n                                 <Col>\n                                 <a href={\"/restaurant/\" + item.id}><Button variant=\"danger\" className=\"float-end\" >Więcej</Button></a>\n                                 </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    )\n                }\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default RestaurantList","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Register.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Login.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Header.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantSearch.js",["127"],[],"import { Button, Container, Row, Col, Form} from \"react-bootstrap\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch} from '@fortawesome/free-solid-svg-icons';\nimport {useNavigate } from 'react-router-dom';\nimport React, {useState, useEffect} from \"react\";\nimport Header from './Header';\n\nfunction RestaurantSearch(){\n\n\n    let navigate = useNavigate();\n    const [city, setCity]=useState(\"\")\n\n    function searchCity(){\n        localStorage.setItem(\"city\",city)\n        navigate('/restaurant')\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container fluid>\n                <Row className=\"mb-5\">\n                <Col className=\"mt-5 d-block d-md-none\">\n                            <Col className=\"mb-5\"><h2>Znajdź restaurację w swojej okolicy</h2></Col>\n                            <Col className=\"mt-5 mb-4\">\n                                <Form.Control type=\"text\" value={city} onChange={(e)=>setCity(e.target.value)} placeholder=\"Szukaj...\" />\n                            </Col>\n                            <Col>\n                                <Button variant=\"danger\" className=\"search-icon\" onClick={searchCity}><FontAwesomeIcon icon={faSearch} /></Button>\n                            </Col>\n                    </Col>\n                    <Col className=\"d-none d-md-block\">\n                    <div className=\"login-bg\">\n                        <div className=\"bg-mute\">\n                        <div className=\"search-box\">\n                            <Col className=\"mb-4\"><h2>Znajdź restaurację w swojej okolicy</h2></Col>\n                            <Col>\n                                <Form.Control type=\"text\" value={city} onChange={(e)=>setCity(e.target.value)} className=\"search-bar\" placeholder=\"Szukaj...\" />\n                                <Button variant=\"danger\" className=\"search-icon\" onClick={searchCity}><FontAwesomeIcon icon={faSearch} /></Button>\n                            </Col>\n                        </div>\n                        </div>\n                    </div>\n                    </Col>\n                </Row>\n            </Container> \n            <Container>\n               \n            </Container>\n        </div>\n    )\n}\n\nexport default RestaurantSearch","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantDetails.js",["128"],[],"import { Button, Container, Row, Col, Modal} from \"react-bootstrap\"\nimport React, { useEffect , useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Header from './Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMapLocation, faPhone, faEnvelope, faCartShopping } from '@fortawesome/free-solid-svg-icons';\nimport {useNavigate } from 'react-router-dom';\nimport Basket from \"./Basket\";\nimport Product from \"./Product\";\n\nexport default function RestaurantDetails(props)\n{   \n    let navigate = useNavigate();\n    let {id} = useParams();\n    const {cartItems, onAdd, onRemove} = props\n    const [restaurant, setRestaurant]=useState({})\n    const [opening, setOpening]=useState([])\n    const [menu, setMenu]=useState([])\n    const [show, setShow] = useState(false);\n    \n\n    const handleOpen = () => setShow(true);\n    const handleClose = () => setShow(false);\n    \n    function today(day){\n        var weekdays = new Array(8);\n        weekdays[0] = \"Niedziela\";\n        weekdays[1] = \"Poniedziałek\";\n        weekdays[2] = \"Wtorek\";\n        weekdays[3] = \"Środa\";\n        weekdays[4] = \"Czwartek\";\n        weekdays[5] = \"Piątek\";\n        weekdays[6] = \"Sobota\";\n        weekdays[7] = \"Niedziela\";\n        return weekdays[day]\n    }\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/info?id=\" + id);\n            data = await data.json()\n            console.warn(data.value)\n\n            if(data.status === 1){\n                data = await data.value\n                setRestaurant(data)\n                setOpening(data.openingPeriod)\n            }\n            else {\n                navigate('/restaurant')\n            }\n        \n        }\n        async function fetchMenuData(){\n            let data = await fetch(\"https://creator.azurewebsites.net/menu/show-restaurant-menus?restaurantId=\" + id);\n                data = await data.json()\n                console.warn(data.value)\n                console.warn(data)\n                if(data.status === 1){\n                    data = await data.value\n                    setMenu(data)\n                }\n                else {\n                    \n                }\n            \n            }\n        fetchData();\n        fetchMenuData();\n        console.warn(JSON.stringify(restaurant))\n    },[]);\n\n    return(\n        <div>\n            <Header/>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Koszyk</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Basket cartItems={cartItems} onAdd={onAdd} onRemove={onRemove}/>\n                </Modal.Body>\n                <Modal.Footer>\n                   <Button variant=\"danger\" onClick={handleClose}>\n                        Zamknij\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Container>\n            <Button className=\"mt-3 cart d-none d-md-block\" variant=\"danger\" onClick={handleOpen}>\n                <FontAwesomeIcon icon={faCartShopping} />\n            </Button>\n            <Button className=\"mt-3 cart-mobile  d-block d-md-none\" variant=\"danger\" onClick={handleOpen}>\n                <FontAwesomeIcon icon={faCartShopping} />\n            </Button>\n            <Row>\n            <Col md={4} className=\"mt-4 restaurant-info d-none d-md-block\">\n                <Row className=\"restaurant-info\">\n                <Col sm={12}>\n                <h1>{restaurant.name}</h1>\n                </Col>\n                <Col md={12}>\n                <h5><FontAwesomeIcon icon={faMapLocation} /> ul.{restaurant.address}, {restaurant.city}</h5>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faPhone} /> {restaurant.phoneNumber}</h6>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faEnvelope} /> {restaurant.email}</h6>\n                </Col>\n                <Col md={12} className=\"mt-4\">\n                <h4>Godziny Otwarcia</h4>\n                {opening.map((item)=>\n                <Row key={item.dayOfWeek} className=\"justify-content-center\" >\n                    <Col sm={12} md={4} >\n                        <h6 className=\"float-md-end\">{today(item.dayOfWeek)}:</h6>\n                    </Col>\n                    <Col sm={12} md={4}>\n                        <h6 className=\"float-md-start\">{item.from.substring(0,5)} - {item.to.substring(0,5)}</h6>\n                    </Col>\n                </Row>\n                )}\n                </Col>\n                </Row>\n            </Col>\n            <Col md={12} className=\"mt-4 d-block d-md-none\">\n                <Row>\n                <Col sm={12}>\n                <h1>{restaurant.name}</h1>\n                </Col>\n                <Col md={12}>\n                <h5><FontAwesomeIcon icon={faMapLocation} /> ul.{restaurant.address}, {restaurant.city}</h5>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faPhone} /> {restaurant.phoneNumber}</h6>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faEnvelope} /> {restaurant.email}</h6>\n                </Col>\n                <Col md={12} className=\"mt-4\">\n                <h4>Godziny Otwarcia</h4>\n                {opening.map((item)=>\n                <Row key={item.dayOfWeek} className=\"justify-content-center\" >\n                    <Col sm={12} md={4} >\n                        <h6 className=\"float-md-end\">{today(item.dayOfWeek)}:</h6>\n                    </Col>\n                    <Col sm={12} md={4}>\n                        <h6 className=\"float-md-start\">{item.from.substring(0,5)} - {item.to.substring(0,5)}</h6>\n                    </Col>\n                </Row>\n                )}\n                </Col>\n                </Row>\n            </Col>           \n            <Col sm={12} md={7} className=\"mt-4 justify-content-center\">\n                <Col sm={12} className=\"mt-5\">\n                <h1>Menu</h1>\n                {  menu && menu.length?\n                menu.map((type)=>\n                <Row key={menu.id} className=\"mb-4 justify-content-center\">\n                    <Col sm={12} md={8} className=\"menu-bg mb-3\">\n                    <h3 className=\"float-md-start\">{type.menuName}</h3>\n                    </Col>\n                    <Col md={2} className=\"menu-bg mb-3 d-none d-md-block\">\n                        <p className=\"float-md-end\">{type.menuTypeName}</p>\n                    </Col>\n                    <div className=\"clearfix\"></div>\n                    {type.itemsList.map((product)=>\n                     <Product key={product.id} product={product} onAdd={onAdd}/>\n                    )}\n                </Row>\n                ):<><h5>Menu nie jest dostępne online</h5></>}\n                </Col>\n                </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}",[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageMenu.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageRestaurant.js",["129","130"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/AddEmployee.js",["131","132"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageEmployee.js",["133","134","135","136","137"],[],"import AddEmployee from \"./Employee/AddEmployee\";\nimport Header from '../Header';\nimport { Col, Container, Row, Table, Button, Modal } from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAdd, faTrashCan, faPenToSquare } from '@fortawesome/free-solid-svg-icons'\n\nfunction ManageEmployee()\n{\n\n    let navigate = useNavigate()\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [restaurants, setRestaurants]= useState([])\n    const [restaurantId, setRestaurantId]= useState([])\n    const [employees, setEmployees]= useState([])\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState(\"\")\n\n    const handleClose = () => setShow(false);\n\n    useEffect (()=>{\n        fetchData()\n        fetchEmployeeData()\n    },[]);\n\n    async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n             data = await data.json()\n             data = data.value\n             setRestaurants(data)\n         }\n\n    async function fetchEmployeeData(){\n         let data = await fetch(\"https://creator.azurewebsites.net/employee/get-employee-by-owner?ownerId=\" + user.id);\n              data = await data.json()\n              data = data.value\n             console.warn(data)\n              setEmployees(data)\n        }\n\n    async function deleteEmployee(employeeId){\n        let result = await fetch(\"https://creator.azurewebsites.net/employee/delete?employeeId=\" + employeeId,{\n            method: 'DELETE',\n            headers:{\n                \"Access-Control-Allow-Origin\" : \"*\"\n            }\n        });\n        result = await result.json()\n        console.warn(result)\n        if(result.status === 1){\n            fetchData();\n            fetchEmployeeData()\n        }\n        else{\n            setErrorMessage(result.message)\n            setShow(true)\n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Błąd</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    {errorMessage}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n            </Modal>\n            <Container>\n                <Row className='mt-4 justify-content-center'>\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/employee/add\">\n                            <Button className='float-end ' variant='success'><FontAwesomeIcon icon={faAdd} /></Button>\n                        </Link>\n                    </Col>\n                    <Col md={10}>\n                        { restaurants.map((item)=>\n                        <>\n                        <div class=\"p-2 mt-4 bg-danger text-white\">{item.name}</div>\n                        <Table striped hover responsive className=\"mt-3\">\n                            <thead>\n                                <tr>\n                                    <th>Imię</th>\n                                    <th>Nazwisko</th>\n                                    <th>Telefon</th>\n                                    <th>Email</th>\n                                    <th>Rola</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {employees.map((employee)=>\n                            item.id === employee.restaurant.id ?\n                            <>  \n                                <tr key={employee.id}>\n                                    <td>{employee.name}</td>\n                                    <td>{employee.lastName}</td>\n                                    <td>{employee.phoneNumber}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{employee.employeeRoleName}</td>\n                                    <td>\n                                        <Link to={\"/manage/employee/\"+employee.id}>\n                                            <Button variant='warning'><FontAwesomeIcon icon={faPenToSquare} /></Button>\n                                        </Link>\n                                    </td>\n                                    <td><Button variant='danger'><FontAwesomeIcon icon={faTrashCan} onClick={(e) => deleteEmployee(employee.id, e)}/></Button></td>\n                                </tr>\n                            </>:<></>\n                            )}\n                            </tbody>\n                        </Table> \n                        </>  \n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default ManageEmployee","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/AddRestaurant.js",["138"],[],"import { Col, Container, Row, Form, Button, Modal} from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction AddRestaurant()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [city, setCity]=useState(\"\")\n    const [address, setAddress]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [voivodeshipList, setVoivodeshipList]=useState([])\n    const [voivodeship, setVoivodeship]=useState(\"\")\n    const [monO, setMonO]=useState(\"\")\n    const [tueO, setTueO]=useState(\"\")\n    const [wedO, setWedO]=useState(\"\")\n    const [thuO, setThuO]=useState(\"\")\n    const [friO, setFriO]=useState(\"\")\n    const [satO, setSatO]=useState(\"\")\n    const [sunO, setSunO]=useState(\"\")\n    const [monC, setMonC]=useState(\"\")\n    const [tueC, setTueC]=useState(\"\")\n    const [wedC, setWedC]=useState(\"\")\n    const [thuC, setThuC]=useState(\"\")\n    const [friC, setFriC]=useState(\"\")\n    const [satC, setSatC]=useState(\"\")\n    const [sunC, setSunC]=useState(\"\")\n    const [type, setType]=useState([])\n    const [typeSelected, setTypeSelected]=useState()\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/get-types\");\n            data = await data.json()\n            data = await data.value\n        setType(data)\n        }\n        async function fetchVoivodeshipData(){\n            let data = await fetch(\"https://creator.azurewebsites.net/restaurant//get-voivodeship\");\n                data = await data.json()\n                console.warn(data)\n                data = await data.value\n                console.warn(data)\n            setVoivodeshipList(data)\n            }\n        fetchData();\n        fetchVoivodeshipData()\n    },[]);\n\n    async function create(){\n\n        let openingTimes = [\n            {\n                \"dayOfWeek\":1,\n                \"from\":monO,\n                \"to\":monC,\n            },\n            {\n                \"dayOfWeek\":2,\n                \"from\":tueO,\n                \"to\":tueC,\n            },\n            {\n                \"dayOfWeek\":3,\n                \"from\":wedO,\n                \"to\":wedC,\n            },\n            {\n                \"dayOfWeek\":4,\n                \"from\":thuO,\n                \"to\":thuC,\n            },\n            {\n                \"dayOfWeek\":5,\n                \"from\":friO,\n                \"to\":friC,\n            },\n            {\n                \"dayOfWeek\":6,\n                \"from\":satO,\n                \"to\":satC,\n            },\n            {\n                \"dayOfWeek\":7,\n                \"from\":sunO,\n                \"to\":sunC,\n            },\n\n        ]\n\n        let owner = user.id\n        let cuisine = parseInt(typeSelected)\n        let restaurantTypesList = [{id:cuisine}]\n        let item={owner, name, city, address, phoneNumber, email, voivodeship, openingTimes, restaurantTypesList}\n        console.warn(item)\n\n        let result = await fetch(\"https://creator.azurewebsites.net/restaurant/add/\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            alert(\"Dodano pomyślnie!\");\n            navigate('/manage/restaurant')\n        }\n        else{\n            errorMessage.length = 0\n            errorMessage.push(\"\")\n            errorMessage.push(result.errorList.email)\n            errorMessage.push(result.errorList.phoneNumber)\n            errorMessage.push(result.errorList.address)\n            errorMessage.push(result.errorList.city)\n            errorMessage.push(result.errorList.voivodeship)\n            errorMessage.push(result.errorList.openingTimes)\n            console.warn(errorMessage)\n            console.warn(result)\n            setShow(true)   \n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Błąd</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage.map((item, index) => <p key={index}>{item}</p>) }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/restaurant\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Dodaj restaurację</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa restauracji</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ kuchni</Form.Label>\n                                <Form.Select aria-label=\"Default select example\" value={typeSelected} onChange={(e)=>setTypeSelected(e.target.value)}>\n                                    <option value=\"\">Wybierz</option>\n                                    {\n                                        type.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres</Form.Label>\n                                <Form.Control type=\"input\" value={address} onChange={(e)=>setAddress(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Miasto</Form.Label>\n                                <Form.Control type=\"input\" value={city} onChange={(e)=>setCity(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Województwo</Form.Label>\n                                <Form.Select value={voivodeship} onChange={(e)=>setVoivodeship(e.target.value)}>\n                                    <option value=\"\">Wybierz</option>\n                                    {\n                                        voivodeshipList.map((opt)=>\n                                            <option key={opt.id} value={opt.name}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                           <h5 className=\"mt-2\">Godziny otwarcia</h5>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Poniedziałek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                    <Col sm={5}><Form.Control type=\"time\" value={monO} onChange={(e)=>setMonO(e.target.value)}/></Col>\n                                    -\n                                    <Col sm={5}><Form.Control type=\"time\" value={monC} onChange={(e)=>setMonC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Wtorek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={tueO} onChange={(e)=>setTueO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={tueC} onChange={(e)=>setTueC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Środa</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={wedO} onChange={(e)=>setWedO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={wedC} onChange={(e)=>setWedC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Czwartek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={thuO} onChange={(e)=>setThuO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={thuC} onChange={(e)=>setThuC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Piątek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={friO} onChange={(e)=>setFriO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={friC} onChange={(e)=>setFriC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                            <Form.Label className=\"float-start\">Sobota</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={satO} onChange={(e)=>setSatO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={satC} onChange={(e)=>setSatC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Niedziela</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={sunO} onChange={(e)=>setSunO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={sunC} onChange={(e)=>setSunC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default AddRestaurant","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/EditRestaurant.js",["139","140","141"],[],"import { Col, Container, Row, Form, Button, Modal} from \"react-bootstrap\";\nimport {useNavigate, Link, useParams} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction EditRestaurant(props)\n{\n    \n    let navigate = useNavigate();\n    let {id} = useParams();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [city, setCity]=useState(\"\")\n    const [address, setAddress]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [voivodeshipList, setVoivodeshipList]=useState([])\n    const [voivodeship, setVoivodeship]=useState(\"\")\n    const [monO, setMonO]=useState(\"\")\n    const [tueO, setTueO]=useState(\"\")\n    const [wedO, setWedO]=useState(\"\")\n    const [thuO, setThuO]=useState(\"\")\n    const [friO, setFriO]=useState(\"\")\n    const [satO, setSatO]=useState(\"\")\n    const [sunO, setSunO]=useState(\"\")\n    const [monC, setMonC]=useState(\"\")\n    const [tueC, setTueC]=useState(\"\")\n    const [wedC, setWedC]=useState(\"\")\n    const [thuC, setThuC]=useState(\"\")\n    const [friC, setFriC]=useState(\"\")\n    const [satC, setSatC]=useState(\"\")\n    const [sunC, setSunC]=useState(\"\")\n    const [type, setType]=useState([])\n    const [typeSelected, setTypeSelected]=useState(\"\")\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n    useEffect (()=>{\n        async function fetchRestaurantData(){\n            let data = await fetch(\"https://creator.azurewebsites.net/restaurant/info?id=\" + id);\n                data = await data.json()\n    \n                if(data.status === 1){\n                    data = await data.value\n                    console.warn(data)\n                    setName(data.name)\n                    setCity(data.city)\n                    setAddress(data.address)\n                    setPhone(data.phoneNumber)\n                    setEmail(data.email)\n                    setVoivodeship(data.voivodeship)\n                    setTypeSelected(data.restaurantTypes[0].id)\n                    setMonO(data.openingPeriod[0].from)\n                    setTueO(data.openingPeriod[1].from)\n                    setWedO(data.openingPeriod[2].from)\n                    setThuO(data.openingPeriod[3].from)\n                    setFriO(data.openingPeriod[4].from)\n                    setMonC(data.openingPeriod[0].to)\n                    setTueC(data.openingPeriod[1].to)\n                    setWedC(data.openingPeriod[2].to)\n                    setThuC(data.openingPeriod[3].to)\n                    setFriC(data.openingPeriod[4].to)\n                    {   if(data.openingPeriod.length > 5){\n                            setSatO(data.openingPeriod[5].from)\n                            setSunO(data.openingPeriod[6].from)\n                            setSatC(data.openingPeriod[5].to)\n                            setSunC(data.openingPeriod[6].to)\n                    }}\n                    \n                    console.warn(typeSelected)\n                }\n                else {\n                    navigate('/restaurant')\n                }\n            \n            }\n        async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/get-types\");\n            data = await data.json()\n            data = await data.value\n        setType(data)\n        }\n        async function fetchVoivodeshipData(){\n            let data = await fetch(\"https://creator.azurewebsites.net/restaurant/get-voivodeship\");\n                data = await data.json()\n                data = await data.value\n            setVoivodeshipList(data)\n        }\n        fetchData();\n        fetchVoivodeshipData()\n        fetchRestaurantData()\n    },[]);\n\n    async function editRestaurant(){\n\n        let openingPeriod = [\n            {\n                \"dayOfWeek\":1,\n                \"from\":monO,\n                \"to\":monC,\n            },\n            {\n                \"dayOfWeek\":2,\n                \"from\":tueO,\n                \"to\":tueC,\n            },\n            {\n                \"dayOfWeek\":3,\n                \"from\":wedO,\n                \"to\":wedC,\n            },\n            {\n                \"dayOfWeek\":4,\n                \"from\":thuO,\n                \"to\":thuC,\n            },\n            {\n                \"dayOfWeek\":5,\n                \"from\":friO,\n                \"to\":friC,\n            },\n            {\n                \"dayOfWeek\":6,\n                \"from\":satO,\n                \"to\":satC,\n            },\n            {\n                \"dayOfWeek\":7,\n                \"from\":sunO,\n                \"to\":sunC,\n            },\n\n        ]\n\n        let ownerId = user.id\n        let cuisine = parseInt(typeSelected)\n        let restaurantTypes = [{id:cuisine}]\n        let item={ownerId, name, city, address, phoneNumber, email, voivodeship, openingPeriod, restaurantTypes}\n        console.warn(item)\n\n        let result = await fetch(\"https://creator.azurewebsites.net/restaurant/update\",{\n            method:'POST',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n                \"Access-Control-Allow-Origin\" : \"*\"\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            navigate('/')\n        }\n        else{\n            errorMessage.length = 0\n            errorMessage.push(\"\")\n            errorMessage.push(result.errorList.restaurantId)\n            errorMessage.push(result.errorList.email)\n            errorMessage.push(result.errorList.phoneNumber)\n            errorMessage.push(result.errorList.address)\n            errorMessage.push(result.errorList.city)\n            errorMessage.push(result.errorList.voivodeship)\n            errorMessage.push(result.errorList.openingTimes)\n            console.warn(result) \n            console.warn(result.errorList) \n            console.warn(type)\n            setShow(true) \n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Błąd</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage.map((item, index) => <p key={index}>{item}</p>) }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                <Col sm={12} md={10}>\n                        <Link to=\"/manage/restaurant\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Edytuj restaurację</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa restauracji</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ kuchni</Form.Label>\n                                <Form.Select aria-label=\"Default select example\" value={typeSelected} onChange={(e)=>setTypeSelected(e.target.value)}>\n                                    <option>Wybierz</option>\n                                    {\n                                        type.map((opt)=>\n                                            <option key={opt.id} value={opt.name}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres</Form.Label>\n                                <Form.Control type=\"input\" value={address} onChange={(e)=>setAddress(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Miasto</Form.Label>\n                                <Form.Control type=\"input\" value={city} onChange={(e)=>setCity(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Województwo</Form.Label>\n                                <Form.Select value={voivodeship} onChange={(e)=>setVoivodeship(e.target.value)}>\n                                    <option value=\"\">Wybierz</option>\n                                    {\n                                        voivodeshipList.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                           <h5 className=\"mt-2\">Godziny otwarcia</h5>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Poniedziałek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                    <Col sm={5}><Form.Control type=\"time\" value={monO} onChange={(e)=>setMonO(e.target.value)}/></Col>\n                                    -\n                                    <Col sm={5}><Form.Control type=\"time\" value={monC} onChange={(e)=>setMonC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Wtorek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={tueO} onChange={(e)=>setTueO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={tueC} onChange={(e)=>setTueC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Środa</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={wedO} onChange={(e)=>setWedO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={wedC} onChange={(e)=>setWedC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Czwartek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={thuO} onChange={(e)=>setThuO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={thuC} onChange={(e)=>setThuC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Piątek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={friO} onChange={(e)=>setFriO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={friC} onChange={(e)=>setFriC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                            <Form.Label className=\"float-start\">Sobota</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={satO} onChange={(e)=>setSatO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={satC} onChange={(e)=>setSatC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Niedziela</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={sunO} onChange={(e)=>setSunO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={sunC} onChange={(e)=>setSunC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={editRestaurant}>\n                            Edytuj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default EditRestaurant",[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItemToMenu.js",["142","143"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItem.js",["144","145","146","147"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddMenu.js",["148","149","150"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Basket.js",["151","152"],[],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlus, faMinus, faXmark } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function Basket(props){\n\n    const {cartItems, onAdd, onRemove} = props;\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0)\n    const [cupon, setC] = useState()\n\n    return (\n        <Row>\n            <div>\n                {cartItems.length === 0 && <Col>Koszyk jest pusty</Col> }\n            </div>\n        {cartItems.map((item) => (\n                <Row key={item.id}>\n                    <Col sm={8}>\n                        <h5>{item.title}</h5>\n                    </Col>\n                    <Col sm={4}>\n                       <p className=\"float-end\" >{item.quantity}{item.unit}</p>\n                    </Col>\n                    <Col sm={12}>\n                        {item.describe}\n                    </Col>\n                    <Col className=\"mt-2\" sm={5}>\n                    <Button variant=\"danger\" onClick={() => onRemove(item)}><FontAwesomeIcon icon={faMinus} /></Button>\n                    <Button variant=\"success\" onClick={() => onAdd(item)}><FontAwesomeIcon icon={faPlus} /></Button>\n                    </Col>\n                    <Col className=\"mt-3\"  sm={7}>\n                    {cupon ?\n                        <h5 className=\"float-end\">{item.qty} <FontAwesomeIcon icon={faXmark} /> <s>{item.price.toFixed(2)}</s> {(item.price * ((100 - cupon)/100)).toFixed(2)}zł</h5>\n                        :\n                        <h5 className=\"float-end\">{item.qty} <FontAwesomeIcon icon={faXmark} /> {item.price.toFixed(2)}zł</h5>\n                        }\n                    </Col>\n               </Row>\n        ))} \n        {cartItems.length !== 0 && (\n            <Row>\n                <hr className=\"mt-3\"/>\n                <Col>\n                {cupon ? \n                <h5 className=\"float-end\">Suma: <s>{itemsPrice.toFixed(2)}</s> {(itemsPrice * ((100 - cupon)/100)).toFixed(2)}zł</h5> \n                :\n                <h5 className=\"float-end\">Suma: {itemsPrice.toFixed(2)}zł</h5>\n                }\n                </Col>\n            </Row>  \n        )}\n        \n        </Row>\n    );\n}","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Product.js",[],[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/EditEmployee.js",["153","154"],[],"import { Col, Container, Row, Form, Button, Modal} from \"react-bootstrap\";\nimport {useNavigate, Link, useParams} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction EditEmployee(props)\n{\n    let {id} = useParams()\n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [lastName, setLastName]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [password, setPassword]=useState(\"\")\n    const [salary, setSalary]=useState()\n    const [restaurants, setRestaurants]=useState([])\n    const [restaurantId, setRestaurantId]=useState()\n    const [employeeRoles, setEmployeeRoles]=useState()\n    const [employeeRoleId, setEmployeeRoleId]=useState()\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n            data = await data.json()\n            data = data.value\n            setRestaurants(data)\n        }\n        async function fetchRolesData(){\n            let data = await fetch(\"https://creator.azurewebsites.net/employee/get-roles\");\n                data = await data.json()\n                data = data.value\n                setEmployeeRoles(data)\n        }\n         async function fetchEmployee(){\n            let data = await fetch(\"https://creator.azurewebsites.net/employee/get-employee?employeeId=\" + id);\n                data = await data.json()\n                data = data.value\n                console.warn(data)\n                setName(data.name)\n                setLastName(data.lastName)\n                setPhone(data.phoneNumber)\n                setEmail(data.email)\n                setSalary(data.salary)\n                setRestaurantId(data.restaurant.id)\n                setEmployeeRoleId(data.employeeRoleId)\n        }\n        fetchData()\n        fetchRolesData()\n        fetchEmployee()\n    },[]);\n\n    async function editEmployee(){\n\n        let item={name,lastName, phoneNumber, email, password, salary, restaurantId, employeeRoleId}\n        console.warn(item)\n\n        let result = await fetch(\"https://creator.azurewebsites.net/employee/update-employee/\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            alert(\"Edytowano pomyślnie!\");\n            navigate('/manage/employee')\n        }\n        else{\n            errorMessage.length = 0\n            errorMessage.push(result.message)\n            console.warn(errorMessage)\n            console.warn(result)\n            setShow(true)\n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Błąd</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage.map((item) => <p>{item}</p>) }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/employee\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Edytuj pracownika</h2></Col> \n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Imie</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwisko</Form.Label>\n                                <Form.Control type=\"input\" value={lastName} onChange={(e)=>setLastName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Hasło</Form.Label>\n                                <Form.Control type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Płaca</Form.Label>\n                                <Form.Control type=\"number\" value={salary} onChange={(e)=>setSalary(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Restauracja</Form.Label>\n                                <Form.Select value={restaurantId} onChange={(e)=>setRestaurantId(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                { restaurants.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Rola</Form.Label>\n                                <Form.Select value={employeeRoleId} onChange={(e)=>setEmployeeRoleId(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                {   employeeRoles && employeeRoles.length?\n                                    employeeRoles.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                    ):<></>\n                                }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={editEmployee}>\n                            Edytuj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default EditEmployee","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageCupoun.js",["155","156","157","158","159","160"],[],"import { Col, Container, Row, Form, Button, Modal} from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\nimport Header from \"../Header\";\n\n\nfunction ManageCupoun()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [cuponCode, setCuponCode]=useState(\"\")\n    const [maxUse, setMaxUse]=useState(\"\")\n    const [value, setValue]=useState(\"\")\n    const [restaurants, setRestaurants]=useState([])\n    const [restaurantId, setRestaurantId]=useState()\n    const [restaurant, setRestaurant]=useState([])\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n            data = await data.json()\n            data = data.value\n            setRestaurants(data)\n        }\n        fetchData()\n    },[]);\n\n    async function create(){\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/info?id=\" + restaurantId);\n            data = await data.json()\n            data = data.value\n            console.warn(data)\n            setRestaurant(data)\n\n        let item={cuponCode, maxUse, restaurantId, value, restaurant}\n        console.warn(item)\n\n        let result = await fetch(\"https://creator.azurewebsites.net/cupon/cupon-create\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            alert(\"Dodano pomyślnie!\");\n            window.location.reload(false);\n        }\n        else{\n            errorMessage.length = 0\n            errorMessage.push(\"\")\n            errorMessage.push(result.errorList)\n            console.warn(errorMessage)\n            console.warn(result)\n            setShow(true)\n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Błąd</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage.map((item) => <p>{item}</p>) }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12}><h2>Dodaj kupon</h2></Col> \n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Kupon</Form.Label>\n                                <Form.Control type=\"input\" value={cuponCode} onChange={(e)=>setCuponCode(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Ilość użyć</Form.Label>\n                                <Form.Control type=\"input\" value={maxUse} onChange={(e)=>setMaxUse(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Restauracja</Form.Label>\n                                <Form.Select value={restaurantId} onChange={(e)=>setRestaurantId(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                { restaurants.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Rabat</Form.Label>\n                                <Form.Control type=\"number\" value={value} onChange={(e)=>setValue(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default ManageCupoun",{"ruleId":"161","severity":1,"message":"162","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":31,"column":7,"nodeType":"167","endLine":31,"endColumn":9,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"169","line":5,"column":26,"nodeType":"163","messageId":"164","endLine":5,"endColumn":35},{"ruleId":"165","severity":1,"message":"170","line":71,"column":7,"nodeType":"167","endLine":71,"endColumn":9,"suggestions":"171"},{"ruleId":"161","severity":1,"message":"172","line":10,"column":9,"nodeType":"163","messageId":"164","endLine":10,"endColumn":17},{"ruleId":"165","severity":1,"message":"173","line":21,"column":7,"nodeType":"167","endLine":21,"endColumn":9,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"175","line":26,"column":26,"nodeType":"163","messageId":"164","endLine":26,"endColumn":41},{"ruleId":"165","severity":1,"message":"176","line":46,"column":7,"nodeType":"167","endLine":46,"endColumn":9,"suggestions":"177"},{"ruleId":"161","severity":1,"message":"178","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":19},{"ruleId":"161","severity":1,"message":"172","line":12,"column":9,"nodeType":"163","messageId":"164","endLine":12,"endColumn":17},{"ruleId":"161","severity":1,"message":"179","line":15,"column":12,"nodeType":"163","messageId":"164","endLine":15,"endColumn":24},{"ruleId":"161","severity":1,"message":"180","line":15,"column":26,"nodeType":"163","messageId":"164","endLine":15,"endColumn":41},{"ruleId":"165","severity":1,"message":"181","line":26,"column":7,"nodeType":"167","endLine":26,"endColumn":9,"suggestions":"182"},{"ruleId":"161","severity":1,"message":"175","line":38,"column":26,"nodeType":"163","messageId":"164","endLine":38,"endColumn":41},{"ruleId":"161","severity":1,"message":"175","line":39,"column":26,"nodeType":"163","messageId":"164","endLine":39,"endColumn":41},{"ruleId":"183","severity":1,"message":"184","line":68,"column":21,"nodeType":"185","messageId":"186","endLine":73,"endColumn":23},{"ruleId":"165","severity":1,"message":"187","line":97,"column":7,"nodeType":"167","endLine":97,"endColumn":9,"suggestions":"188"},{"ruleId":"161","severity":1,"message":"172","line":8,"column":9,"nodeType":"163","messageId":"164","endLine":8,"endColumn":17},{"ruleId":"165","severity":1,"message":"176","line":49,"column":7,"nodeType":"167","endLine":49,"endColumn":9,"suggestions":"189"},{"ruleId":"161","severity":1,"message":"190","line":1,"column":52,"nodeType":"163","messageId":"164","endLine":1,"endColumn":57},{"ruleId":"161","severity":1,"message":"172","line":8,"column":9,"nodeType":"163","messageId":"164","endLine":8,"endColumn":17},{"ruleId":"161","severity":1,"message":"175","line":21,"column":26,"nodeType":"163","messageId":"164","endLine":21,"endColumn":41},{"ruleId":"165","severity":1,"message":"176","line":40,"column":7,"nodeType":"167","endLine":40,"endColumn":9,"suggestions":"191"},{"ruleId":"161","severity":1,"message":"172","line":8,"column":9,"nodeType":"163","messageId":"164","endLine":8,"endColumn":17},{"ruleId":"161","severity":1,"message":"192","line":10,"column":23,"nodeType":"163","messageId":"164","endLine":10,"endColumn":35},{"ruleId":"165","severity":1,"message":"176","line":39,"column":7,"nodeType":"167","endLine":39,"endColumn":9,"suggestions":"193"},{"ruleId":"161","severity":1,"message":"169","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"194","line":11,"column":19,"nodeType":"163","messageId":"164","endLine":11,"endColumn":23},{"ruleId":"161","severity":1,"message":"175","line":26,"column":26,"nodeType":"163","messageId":"164","endLine":26,"endColumn":41},{"ruleId":"165","severity":1,"message":"195","line":59,"column":7,"nodeType":"167","endLine":59,"endColumn":9,"suggestions":"196"},{"ruleId":"161","severity":1,"message":"197","line":2,"column":22,"nodeType":"163","messageId":"164","endLine":2,"endColumn":26},{"ruleId":"161","severity":1,"message":"198","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":25},{"ruleId":"161","severity":1,"message":"199","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":23},{"ruleId":"161","severity":1,"message":"172","line":12,"column":9,"nodeType":"163","messageId":"164","endLine":12,"endColumn":17},{"ruleId":"161","severity":1,"message":"175","line":21,"column":26,"nodeType":"163","messageId":"164","endLine":21,"endColumn":41},{"ruleId":"165","severity":1,"message":"176","line":33,"column":7,"nodeType":"167","endLine":33,"endColumn":9,"suggestions":"200"},"no-unused-vars","'faSearch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city' and 'restaurants'. Either include them or remove the dependency array.","ArrayExpression",["201"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'navigate', and 'restaurant'. Either include them or remove the dependency array.",["202"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["203"],"'setErrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["204"],"'AddEmployee' is defined but never used.","'restaurantId' is assigned a value but never used.","'setRestaurantId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchEmployeeData'. Either include them or remove the dependency array.",["205"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'id', 'navigate', and 'typeSelected'. Either include them or remove the dependency array.",["206"],["207"],"'Alert' is defined but never used.",["208"],"'setCreatorId' is assigned a value but never used.",["209"],"'setC' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'user.id'. Either include them or remove the dependency array.",["210"],"'Link' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faChevronLeft' is defined but never used.",["211"],{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"218","fix":"224"},{"desc":"218","fix":"225"},{"desc":"218","fix":"226"},{"desc":"227","fix":"228"},{"desc":"218","fix":"229"},"Update the dependencies array to be: [city, restaurants]",{"range":"230","text":"231"},"Update the dependencies array to be: [id, navigate, restaurant]",{"range":"232","text":"233"},"Update the dependencies array to be: [fetchData]",{"range":"234","text":"235"},"Update the dependencies array to be: [user.id]",{"range":"236","text":"237"},"Update the dependencies array to be: [fetchData, fetchEmployeeData]",{"range":"238","text":"239"},"Update the dependencies array to be: [id, navigate, typeSelected]",{"range":"240","text":"241"},{"range":"242","text":"237"},{"range":"243","text":"237"},{"range":"244","text":"237"},"Update the dependencies array to be: [id, user.id]",{"range":"245","text":"246"},{"range":"247","text":"237"},[927,929],"[city, restaurants]",[2378,2380],"[id, navigate, restaurant]",[736,738],"[fetchData]",[1734,1736],"[user.id]",[919,921],"[fetchData, fetchEmployeeData]",[3967,3969],"[id, navigate, typeSelected]",[1791,1793],[1469,1471],[1362,1364],[2329,2331],"[id, user.id]",[1214,1216]]