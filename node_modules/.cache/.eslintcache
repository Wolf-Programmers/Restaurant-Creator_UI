[{"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/index.js":"1","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/App.js":"2","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/reportWebVitals.js":"3","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantList.js":"4","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Register.js":"5","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Login.js":"6","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Header.js":"7","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantSearch.js":"8","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Cupoun.js":"9","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantDetails.js":"10","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageMenu.js":"11","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageRestaurant.js":"12","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/AddEmployee.js":"13","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageEmployee.js":"14","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/AddRestaurant.js":"15","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/EditRestaurant.js":"16","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItemToMenu.js":"17","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItem.js":"18","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddMenu.js":"19","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Basket.js":"20","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Product.js":"21"},{"size":633,"mtime":1653601360000,"results":"22","hashOfConfig":"23"},{"size":2376,"mtime":1654031840141,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1653601360000,"results":"25","hashOfConfig":"23"},{"size":3954,"mtime":1653831450425,"results":"26","hashOfConfig":"23"},{"size":4458,"mtime":1653601360000,"results":"27","hashOfConfig":"23"},{"size":3344,"mtime":1653601360000,"results":"28","hashOfConfig":"23"},{"size":1914,"mtime":1654031769986,"results":"29","hashOfConfig":"23"},{"size":1577,"mtime":1654028274585,"results":"30","hashOfConfig":"23"},{"size":3022,"mtime":1652469176117,"results":"31","hashOfConfig":"32"},{"size":5417,"mtime":1654028250792,"results":"33","hashOfConfig":"23"},{"size":368,"mtime":1653767514166,"results":"34","hashOfConfig":"23"},{"size":3258,"mtime":1654033138349,"results":"35","hashOfConfig":"23"},{"size":8206,"mtime":1654032153796,"results":"36","hashOfConfig":"23"},{"size":4128,"mtime":1654031917513,"results":"37","hashOfConfig":"23"},{"size":14410,"mtime":1654031964106,"results":"38","hashOfConfig":"23"},{"size":14862,"mtime":1654026599409,"results":"39","hashOfConfig":"23"},{"size":5785,"mtime":1654026601835,"results":"40","hashOfConfig":"23"},{"size":7007,"mtime":1654027024065,"results":"41","hashOfConfig":"23"},{"size":4944,"mtime":1654027039412,"results":"42","hashOfConfig":"23"},{"size":1759,"mtime":1654017172907,"results":"43","hashOfConfig":"23"},{"size":1017,"mtime":1654027108571,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bm33hd",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"uicf14",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"51"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"51"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/index.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/App.js",[],[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/reportWebVitals.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantList.js",["121","122","123"],[],"import { Button, Container, Row, Col} from \"react-bootstrap\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faMapLocation, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport React, { useEffect , useState} from \"react\";\nimport Header from './Header';\n\nfunction RestaurantList()\n{   \n    let now = new Date()\n    let today = now.getDay()\n    let city = localStorage.getItem('city')\n\n    const [restaurants, setRestaurants]=useState([])\n    \n    \n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/info-city?city=\" + city);\n            data = await data.json()\n            console.warn(data.value)\n\n            if(data.status === 1){\n                data = await data.value\n                setRestaurants(data)\n            }\n            else {\n\n            }\n        \n        }\n        fetchData();\n        console.warn(JSON.stringify(restaurants))\n    },[]);\n\n    return(\n        <div>\n            <Header/>\n            <Container>\n                <Row className=\"justify-content-center mt-4\">\n                    <Col>\n                    <h1>Lista Restauracji </h1>\n                        {/* <Form.Control type=\"text\" className=\"search-bar\" placeholder=\"Szukaj...\" />\n                        <Button variant=\"outline-secondary\" className=\"search-icon\"><FontAwesomeIcon icon={faSearch} /></Button> */}\n                    </Col>\n                </Row>\n                {/* <Row className=\"mt-3\">\n                    <Col>\n                    <Button variant=\"outline-danger\" className=\"cousine-type\">Kuchnia WÅ‚oska</Button>\n                    <Button variant=\"outline-danger\" className=\"cousine-type\">Kuchnia Azjatycka</Button>\n                    <Button variant=\"outline-danger\" className=\"cousine-type\">Kebab</Button>\n                    <Button variant=\"outline-danger\" className=\"cousine-type\">Burgery</Button>\n                    <Button variant=\"outline-danger\" className=\"cousine-type\">Kuchnia Polska</Button>\n                    </Col>\n                </Row> */}\n            </Container>\n            <div className=\"clearfix\"></div>\n            <Container className=\"mt-5\">\n                <Row>\n                    { restaurants.map((item)=>\n                    <Row className=\"justify-content-center restaurant-card\">\n                        <Col md={3}>\n                            <img className=\"restaurant-img\" src=\"https://www.feinschmecker.de/uploads/media/940x/03/743-Burger-de-Luxe.jpg?v=1-0\" alt=\"Zdjecie restauracji\"/>\n                        </Col>\n                        <Col md={7}>\n                            <Row>\n                                <Col className=\"mb-4\" md={8}>\n                                    <h2>{item.name}</h2>\n                                </Col>\n                                 <Col md={4}>\n                                 {item.restaurantTypes[0].name}\n                                 </Col>\n                                <Col>\n                                    <h6><FontAwesomeIcon icon={faMapLocation} /> ul.{item.address}, {item.city}</h6>\n                                 </Col>\n                                 <Col>\n                                    <h6><FontAwesomeIcon icon={faPhone} />{item.phoneNumber}</h6>\n                                 </Col>\n                                 <Col md={12}>\n                                    <div className=\"mb-5\"></div>\n                                 </Col>\n                                 <Col>\n                                 <a href={\"/restaurant/\" + item.id}><Button variant=\"danger\" className=\"float-end\" >WiÄ™cej</Button></a>\n                                 </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    )\n                }\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default RestaurantList",[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Register.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Login.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Header.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantSearch.js",["124"],[],"import { Button, Container, Row, Col, Form} from \"react-bootstrap\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch} from '@fortawesome/free-solid-svg-icons';\nimport {useNavigate } from 'react-router-dom';\nimport React, {useState, useEffect} from \"react\";\nimport Header from './Header';\n\nfunction RestaurantSearch(){\n\n\n    let navigate = useNavigate();\n    const [city, setCity]=useState(\"\")\n\n    function searchCity(){\n        localStorage.setItem(\"city\",city)\n        navigate('/restaurant')\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container fluid>\n                <Row>\n                    <Col>\n                    <div className=\"login-bg\">\n                        <div className=\"bg-mute\">\n                        <div className=\"search-box\">\n                            <Col className=\"mb-4\"><h2>ZnajdÅº restauracjÄ™ w swojej okolicy</h2></Col>\n                            <Col>\n                                <Form.Control type=\"text\" value={city} onChange={(e)=>setCity(e.target.value)} className=\"search-bar\" placeholder=\"Szukaj...\" />\n                                <Button variant=\"danger\" className=\"search-icon\" onClick={searchCity}><FontAwesomeIcon icon={faSearch} /></Button>\n                            </Col>\n                        </div>\n                        </div>\n                    </div>\n                    </Col>\n                </Row>\n            </Container> \n            <Container>\n               \n            </Container>\n        </div>\n    )\n}\n\nexport default RestaurantSearch","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Cupoun.js",["125","126","127","128"],[],"import { Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {useNavigate} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\n\nfunction Cupoun()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [cuponCode, setcuponCode]=useState(\"\")\n    const [maxUse, setmaxUse]=useState(\"\")\n    const [id, setId]=useState(\"\")\n    const [typeSelected, setTypeSelected]=useState()\n\n\n\n    async function create(){\n\n        let restaurant = await fetch(\"http://localhost:8080/restaurant/info?id=\" + id);\n        restaurant= await restaurant.json()\n        restaurant = await restaurant.value\n        console.warn(restaurant)\n\n        let item={cuponCode, maxUse, restaurant}\n        console.warn(item)\n\n        let result = await fetch(\"http://localhost:8080/cupon/cupon-create/\",{\n            method:'Post',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            navigate('/')\n        }\n        else{\n            console.warn(result) \n            console.warn(result.errorList) \n        }\n    }\n\n    return(\n        <div>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12}><h2>Dodaj kupon</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Kod rabatowy</Form.Label>\n                                <Form.Control type=\"input\" value={cuponCode} onChange={(e)=>setcuponCode(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Kij to wie(maxUse)</Form.Label>\n                                <Form.Control type=\"input\" value={maxUse} onChange={(e)=>setmaxUse(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">RESTAURACJA</Form.Label>\n                                <Form.Control type=\"input\" value={id} onChange={(e)=>setId(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default Cupoun",[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/RestaurantDetails.js",["129"],[],"import { Button, Container, Row, Col, Modal} from \"react-bootstrap\"\nimport React, { useEffect , useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Header from './Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMapLocation, faPhone, faEnvelope, faCartShopping } from '@fortawesome/free-solid-svg-icons';\nimport {useNavigate } from 'react-router-dom';\nimport Basket from \"./Basket\";\nimport Product from \"./Product\";\n\nexport default function RestaurantDetails(props)\n{   \n    let navigate = useNavigate();\n    let {id} = useParams();\n    const {cartItems, onAdd, onRemove} = props\n    const [restaurant, setRestaurant]=useState({})\n    const [opening, setOpening]=useState([])\n    const [menu, setMenu]=useState([])\n    const [show, setShow] = useState(false);\n    \n\n    const handleOpen = () => setShow(true);\n    const handleClose = () => setShow(false);\n    \n    function today(day){\n        var weekdays = new Array(8);\n        weekdays[0] = \"Niedziela\";\n        weekdays[1] = \"PoniedziaÅ‚ek\";\n        weekdays[2] = \"Wtorek\";\n        weekdays[3] = \"Åšroda\";\n        weekdays[4] = \"Czwartek\";\n        weekdays[5] = \"PiÄ…tek\";\n        weekdays[6] = \"Sobota\";\n        weekdays[7] = \"Niedziela\";\n        return weekdays[day]\n    }\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/info?id=\" + id);\n            data = await data.json()\n            console.warn(data.value)\n\n            if(data.status === 1){\n                data = await data.value\n                setRestaurant(data)\n                setOpening(data.openingPeriod)\n            }\n            else {\n                navigate('/restaurant')\n            }\n        \n        }\n        async function fetchMenuData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/menu/show-restaurant-menus?restaurantId=\" + id);\n                data = await data.json()\n                console.warn(data.value)\n                console.warn(data)\n                if(data.status === 1){\n                    data = await data.value\n                    setMenu(data)\n                }\n                else {\n                    \n                }\n            \n            }\n        fetchData();\n        fetchMenuData();\n        console.warn(JSON.stringify(restaurant))\n    },[]);\n\n    return(\n        <div>\n            <Header/>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Koszyk</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Basket cartItems={cartItems} onAdd={onAdd} onRemove={onRemove}/>\n                </Modal.Body>\n                <Modal.Footer>\n                   <Button variant=\"danger\" onClick={handleClose}>\n                        Zamknij\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Container>\n            <Button className=\"mt-3 cart\" variant=\"danger\" onClick={handleOpen}>\n                <FontAwesomeIcon icon={faCartShopping} />\n            </Button>\n            <Row>\n            <Col md={4} className=\"mt-4 restaurant-info\">\n                <Row className=\"restaurant-info\">\n                <Col sm={12}>\n                <h1>{restaurant.name}</h1>\n                </Col>\n                <Col md={12}>\n                <h5><FontAwesomeIcon icon={faMapLocation} /> ul.{restaurant.address}, {restaurant.city}</h5>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faPhone} /> {restaurant.phoneNumber}</h6>\n                </Col>\n                <Col md={12}>\n                <h6><FontAwesomeIcon icon={faEnvelope} /> {restaurant.email}</h6>\n                </Col>\n                <Col md={12} className=\"mt-4\">\n                <h4>Godziny Otwarcia</h4>\n                {opening.map((item)=>\n                <Row key={item.dayOfWeek} className=\"justify-content-center\" >\n                    <Col sm={12} md={4} >\n                        <h6 className=\"float-md-end\">{today(item.dayOfWeek)}:</h6>\n                    </Col>\n                    <Col sm={12} md={4}>\n                        <h6 className=\"float-md-start\">{item.from.substring(0,5)} - {item.to.substring(0,5)}</h6>\n                    </Col>\n                </Row>\n                )}\n                </Col>\n                </Row>\n            </Col>\n            <Col md={7} className=\"mt-4 justify-content-center\">\n                <Col md={12} className=\"mt-5\">\n                <h1>Menu</h1>\n                {menu.map((type)=>\n                <Row key={menu.id} className=\"mb-4 justify-content-center\">\n                    <Col sm={12} md={8} className=\"menu-bg mb-3\">\n                    <h3 className=\"float-md-start\">{type.menuName}</h3>\n                    </Col>\n                    <Col sm={12} md={2} className=\"menu-bg mb-3\">\n                        <p className=\"float-md-end\">{type.menuTypeName}</p>\n                    </Col>\n                    <div className=\"clearfix\"></div>\n                    {type.itemsList.map((product)=>\n                     <Product key={product.id} product={product} onAdd={onAdd}/>\n                    )}\n                </Row>\n                )}\n                </Col>\n                </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageMenu.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageRestaurant.js",["130","131"],[],"import Header from '../Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAdd, faTrashCan, faPenToSquare } from '@fortawesome/free-solid-svg-icons'\nimport { Col, Container, Row, Button, Table} from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\n\nfunction ManageRestaurant()\n{\n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [restaurants, setRestaurants]=useState([])\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n        \n            data = await data.json()\n            console.warn(data)\n            console.warn(data.value)\n            data = data.value\n            setRestaurants(data)\n        }\n        fetchData();\n        console.warn(JSON.stringify(restaurants))\n    },[]);\n\n    async function deleteRestaurant(RestaurantId){\n        console.warn(RestaurantId)\n        let data = await fetch(\"https://creator.azurewebsites.net/restaurant/delete?restaurantId=\" + RestaurantId);\n        console.warn(data)\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container>\n                <Row className='mt-4 justify-content-center'>\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/restaurant/add\">\n                            <Button className='float-end ' variant='success'><FontAwesomeIcon icon={faAdd} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12} md={10}>\n                        <Table striped hover>\n                            <thead>\n                                <tr>\n                                    <th>Nazwa</th>\n                                    <th>Lokalizacja</th>\n                                    <th>Telefon</th>\n                                    <th>Email</th>\n                                </tr>\n                            </thead>\n                        { restaurants.map((restaurant)=>\n                           <tbody>\n                                <tr>\n                                    <td>{restaurant.name}</td>\n                                    <td>ul. {restaurant.address}, {restaurant.city}</td>\n                                    <td>{restaurant.phoneNumber}</td>\n                                    <td>{restaurant.email}</td>\n                                    <td>\n                                        <Link to={\"/manage/restaurant/\"+restaurant.id}>\n                                            <Button variant='warning'><FontAwesomeIcon icon={faPenToSquare} /></Button>\n                                        </Link>\n                                    </td>\n                                    <td><Button variant='danger'><FontAwesomeIcon icon={faTrashCan} onClick={(e) => deleteRestaurant(restaurant.id, e)}/></Button></td>\n                                </tr>\n                            </tbody>\n                        )}\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default ManageRestaurant","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Employee/AddEmployee.js",["132","133"],[],"import { Col, Container, Row, Form, Button, Modal} from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction AddEmployee()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [lastName, setLastName]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [password, setPassword]=useState(\"\")\n    const [salary, setSalary]=useState()\n    const [restaurants, setRestaurants]=useState([])\n    const [restaurantId, setRestaurantId]=useState()\n    const [employeeRoles, setEmployeeRoles]=useState()\n    const [employeeRoleId, setEmployeeRoleId]=useState()\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n            data = await data.json()\n            data = data.value\n            setRestaurants(data)\n        }\n        async function fetchRolesData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/employee/get-roles\");\n                data = await data.json()\n                data = data.value\n                console.warn(data)\n                setEmployeeRoles(data)\n            }\n        fetchData()\n        fetchRolesData()\n    },[]);\n\n    async function create(){\n\n        let item={name,lastName, phoneNumber, email, password, salary, restaurantId, employeeRoleId}\n        console.warn(item)\n\n        let result = await fetch(\"http://creator.azurewebsites.net/employee/add-employee/\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            alert(\"Dodano pomyÅ›lnie!\");\n            navigate('/manage/employee')\n        }\n        else{\n            errorMessage.length = 0\n            errorMessage.push(\"\")\n            errorMessage.push(result.errorList.email)\n            errorMessage.push(result.errorList.lastName)\n            errorMessage.push(result.errorList.name)\n            errorMessage.push(result.errorList.password)\n            errorMessage.push(result.errorList.phoneNumber)\n            errorMessage.push(result.errorList.salary)\n            console.warn(errorMessage)\n            console.warn(result)\n            setShow(true)\n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>BÅ‚Ä…d</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage.map((item) => <p>{item}</p>) }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/employee\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Dodaj pracownika</h2></Col> \n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Imie</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwisko</Form.Label>\n                                <Form.Control type=\"input\" value={lastName} onChange={(e)=>setLastName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">HasÅ‚o</Form.Label>\n                                <Form.Control type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">PÅ‚aca</Form.Label>\n                                <Form.Control type=\"number\" value={salary} onChange={(e)=>setSalary(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Restauracja</Form.Label>\n                                <Form.Select value={restaurantId} onChange={(e)=>setRestaurantId(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                { restaurants.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Rola</Form.Label>\n                                <Form.Select value={employeeRoleId} onChange={(e)=>setEmployeeRoleId(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                {   employeeRoles && employeeRoles.length?\n                                    employeeRoles.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                    ):<></>\n                                }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default AddEmployee","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/ManageEmployee.js",["134","135","136","137","138"],[],"import AddEmployee from \"./Employee/AddEmployee\";\nimport Header from '../Header';\nimport { Col, Container, Row, Table, Button } from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAdd, faTrashCan, faPenToSquare } from '@fortawesome/free-solid-svg-icons'\n\nfunction ManageEmployee()\n{\n\n    let navigate = useNavigate()\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [restaurants, setRestaurants]= useState([])\n    const [restaurantId, setRestaurantId]= useState([])\n    const [employees, setEmployees]= useState([])\n\n    useEffect (()=>{\n       async function fetchData(){\n       let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n            data = await data.json()\n            data = data.value\n            setRestaurants(data)\n        }\n        async function fetchEmployeeData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/employee/get-employee-by-owner?ownerId=\" + user.id);\n                 data = await data.json()\n                 data = data.value\n                console.warn(data)\n                 setEmployees(data)\n             }\n        fetchData()\n        fetchEmployeeData()\n    },[]);\n\n    async function deleteRestaurant(RestaurantId){\n        console.warn(RestaurantId)\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/delete?restaurantId=\" + RestaurantId);\n        console.warn(data)\n    }\n\n    return(\n        <div>\n            <Header/> \n            <Container>\n                <Row className='mt-4 justify-content-center'>\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/employee/add\">\n                            <Button className='float-end ' variant='success'><FontAwesomeIcon icon={faAdd} /></Button>\n                        </Link>\n                    </Col>\n                    <Col md={10}>\n                        { restaurants.map((item)=>\n                        <>\n                        <div class=\"p-2 mt-4 bg-danger text-white\">{item.name}</div>\n                        <Table striped hover className=\"mt-3\">\n                            <thead>\n                                <tr>\n                                    <th>ImiÄ™</th>\n                                    <th>Nazwisko</th>\n                                    <th>Telefon</th>\n                                    <th>Email</th>\n                                    <th>Rola</th>\n                                </tr>\n                            </thead>\n                            {employees.map((employee)=>\n                            item.id === employee.restaurant.id ?\n                            <>\n                            \n                                <tbody>\n                                <tr>\n                                    <td>{employee.name}</td>\n                                    <td>{employee.lastName}</td>\n                                    <td>{employee.phoneNumber}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{employee.employeeRoleName}</td>\n                                    <td>\n                                        <Link to={\"/manage/restaurant/\"+employee.id}>\n                                            <Button variant='warning'><FontAwesomeIcon icon={faPenToSquare} /></Button>\n                                        </Link>\n                                    </td>\n                                    <td><Button variant='danger'><FontAwesomeIcon icon={faTrashCan} onClick={(e) => deleteRestaurant(employee.id, e)}/></Button></td>\n                                </tr>\n                                </tbody>\n                            </>:<></>\n                            )}\n                        </Table> \n                        </>  \n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default ManageEmployee","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/AddRestaurant.js",["139"],[],"import { Col, Container, Row, Form, Button, Modal} from \"react-bootstrap\";\nimport {useNavigate, Link} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction AddRestaurant()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [city, setCity]=useState(\"\")\n    const [address, setAddress]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [voivodeshipList, setVoivodeshipList]=useState([])\n    const [voivodeship, setVoivodeship]=useState(\"\")\n    const [monO, setMonO]=useState(\"\")\n    const [tueO, setTueO]=useState(\"\")\n    const [wedO, setWedO]=useState(\"\")\n    const [thuO, setThuO]=useState(\"\")\n    const [friO, setFriO]=useState(\"\")\n    const [satO, setSatO]=useState(\"\")\n    const [sunO, setSunO]=useState(\"\")\n    const [monC, setMonC]=useState(\"\")\n    const [tueC, setTueC]=useState(\"\")\n    const [wedC, setWedC]=useState(\"\")\n    const [thuC, setThuC]=useState(\"\")\n    const [friC, setFriC]=useState(\"\")\n    const [satC, setSatC]=useState(\"\")\n    const [sunC, setSunC]=useState(\"\")\n    const [type, setType]=useState([])\n    const [typeSelected, setTypeSelected]=useState()\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-types\");\n            data = await data.json()\n            data = await data.value\n        setType(data)\n        }\n        async function fetchVoivodeshipData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/restaurant//get-voivodeship\");\n                data = await data.json()\n                console.warn(data)\n                data = await data.value\n                console.warn(data)\n            setVoivodeshipList(data)\n            }\n        fetchData();\n        fetchVoivodeshipData()\n    },[]);\n\n    async function create(){\n\n        let openingTimes = [\n            {\n                \"dayOfWeek\":1,\n                \"from\":monO,\n                \"to\":monC,\n            },\n            {\n                \"dayOfWeek\":2,\n                \"from\":tueO,\n                \"to\":tueC,\n            },\n            {\n                \"dayOfWeek\":3,\n                \"from\":wedO,\n                \"to\":wedC,\n            },\n            {\n                \"dayOfWeek\":4,\n                \"from\":thuO,\n                \"to\":thuC,\n            },\n            {\n                \"dayOfWeek\":5,\n                \"from\":friO,\n                \"to\":friC,\n            },\n            {\n                \"dayOfWeek\":6,\n                \"from\":satO,\n                \"to\":satC,\n            },\n            {\n                \"dayOfWeek\":7,\n                \"from\":sunO,\n                \"to\":sunC,\n            },\n\n        ]\n\n        let owner = user.id\n        let cuisine = parseInt(typeSelected)\n        let restaurantTypesList = [{id:cuisine}]\n        let item={owner, name, city, address, phoneNumber, email, voivodeship, openingTimes, restaurantTypesList}\n        console.warn(item)\n\n        let result = await fetch(\"http://creator.azurewebsites.net/restaurant/add/\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            alert(\"Dodano pomyÅ›lnie!\");\n            navigate('/manage/restaurant')\n        }\n        else{\n            errorMessage.length = 0\n            errorMessage.push(\"\")\n            errorMessage.push(result.errorList.email)\n            errorMessage.push(result.errorList.phoneNumber)\n            errorMessage.push(result.errorList.address)\n            errorMessage.push(result.errorList.city)\n            errorMessage.push(result.errorList.voivodeship)\n            errorMessage.push(result.errorList.openingTimes)\n            console.warn(errorMessage)\n            console.warn(result)\n            setShow(true)   \n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>BÅ‚Ä…d</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage.map((item) => <p>{item}</p>) }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12} md={10}>\n                        <Link to=\"/manage/restaurant\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Dodaj restauracjÄ™</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa restauracji</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ kuchni</Form.Label>\n                                <Form.Select aria-label=\"Default select example\" value={typeSelected} onChange={(e)=>setTypeSelected(e.target.value)}>\n                                    <option value=\"\">Wybierz</option>\n                                    {\n                                        type.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres</Form.Label>\n                                <Form.Control type=\"input\" value={address} onChange={(e)=>setAddress(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Miasto</Form.Label>\n                                <Form.Control type=\"input\" value={city} onChange={(e)=>setCity(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">WojewÃ³dztwo</Form.Label>\n                                <Form.Select value={voivodeship} onChange={(e)=>setVoivodeship(e.target.value)}>\n                                    <option value=\"\">Wybierz</option>\n                                    {\n                                        voivodeshipList.map((opt)=>\n                                            <option key={opt.id} value={opt.name}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                           <h5 className=\"mt-2\">Godziny otwarcia</h5>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">PoniedziaÅ‚ek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                    <Col sm={5}><Form.Control type=\"time\" value={monO} onChange={(e)=>setMonO(e.target.value)}/></Col>\n                                    -\n                                    <Col sm={5}><Form.Control type=\"time\" value={monC} onChange={(e)=>setMonC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Wtorek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={tueO} onChange={(e)=>setTueO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={tueC} onChange={(e)=>setTueC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Åšroda</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={wedO} onChange={(e)=>setWedO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={wedC} onChange={(e)=>setWedC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Czwartek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={thuO} onChange={(e)=>setThuO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={thuC} onChange={(e)=>setThuC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">PiÄ…tek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={friO} onChange={(e)=>setFriO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={friC} onChange={(e)=>setFriC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                            <Form.Label className=\"float-start\">Sobota</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={satO} onChange={(e)=>setSatO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={satC} onChange={(e)=>setSatC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Niedziela</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={sunO} onChange={(e)=>setSunO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={sunC} onChange={(e)=>setSunC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default AddRestaurant","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Restaurant/EditRestaurant.js",["140","141"],[],"import { Col, Container, Row, Form, Button} from \"react-bootstrap\";\nimport {useNavigate, Link, useParams} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"../../Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction EditRestaurant(props)\n{\n    \n    let navigate = useNavigate();\n    let {id} = useParams();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [name, setName]=useState(\"\")\n    const [city, setCity]=useState(\"\")\n    const [address, setAddress]=useState(\"\")\n    const [phoneNumber, setPhone]=useState(\"\")\n    const [email, setEmail]=useState(\"\")\n    const [voivodeshipList, setVoivodeshipList]=useState([])\n    const [voivodeship, setVoivodeship]=useState(\"\")\n    const [monO, setMonO]=useState(\"\")\n    const [tueO, setTueO]=useState(\"\")\n    const [wedO, setWedO]=useState(\"\")\n    const [thuO, setThuO]=useState(\"\")\n    const [friO, setFriO]=useState(\"\")\n    const [satO, setSatO]=useState(\"\")\n    const [sunO, setSunO]=useState(\"\")\n    const [monC, setMonC]=useState(\"\")\n    const [tueC, setTueC]=useState(\"\")\n    const [wedC, setWedC]=useState(\"\")\n    const [thuC, setThuC]=useState(\"\")\n    const [friC, setFriC]=useState(\"\")\n    const [satC, setSatC]=useState(\"\")\n    const [sunC, setSunC]=useState(\"\")\n    const [type, setType]=useState([])\n    const [typeSelected, setTypeSelected]=useState()\n\n    useEffect (()=>{\n        async function fetchRestaurantData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/restaurant/info?id=\" + id);\n                data = await data.json()\n    \n                if(data.status === 1){\n                    data = await data.value\n                    setName(data.name)\n                    setCity(data.city)\n                    setAddress(data.address)\n                    setPhone(data.phoneNumber)\n                    setEmail(data.email)\n                    setVoivodeship(data.voivodeship)\n                    setMonO(data.openingPeriod[0].from)\n                    setTueO(data.openingPeriod[1].from)\n                    setWedO(data.openingPeriod[2].from)\n                    setThuO(data.openingPeriod[3].from)\n                    setFriO(data.openingPeriod[4].from)\n                    setMonC(data.openingPeriod[0].to)\n                    setTueC(data.openingPeriod[1].to)\n                    setWedC(data.openingPeriod[2].to)\n                    setThuC(data.openingPeriod[3].to)\n                    setFriC(data.openingPeriod[4].to)\n                    {   if(data.openingPeriod.length > 5){\n                            setSatO(data.openingPeriod[5].from)\n                            setSunO(data.openingPeriod[6].from)\n                            setSatC(data.openingPeriod[5].to)\n                            setSunC(data.openingPeriod[6].to)\n                    }}\n                    setTypeSelected(data.restaurantTypes[0].id)\n                }\n                else {\n                    navigate('/restaurant')\n                }\n            \n            }\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-types\");\n            data = await data.json()\n            data = await data.value\n        setType(data)\n        }\n        async function fetchVoivodeshipData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/restaurant//get-voivodeship\");\n                data = await data.json()\n                data = await data.value\n                console.warn(data)\n            setVoivodeshipList(data)\n        }\n        fetchData();\n        fetchRestaurantData()\n        fetchVoivodeshipData()\n    },[]);\n\n    async function create(){\n\n        let openingTimes = [\n            {\n                \"dayOfWeek\":1,\n                \"from\":monO,\n                \"to\":monC,\n            },\n            {\n                \"dayOfWeek\":2,\n                \"from\":tueO,\n                \"to\":tueC,\n            },\n            {\n                \"dayOfWeek\":3,\n                \"from\":wedO,\n                \"to\":wedC,\n            },\n            {\n                \"dayOfWeek\":4,\n                \"from\":thuO,\n                \"to\":thuC,\n            },\n            {\n                \"dayOfWeek\":5,\n                \"from\":friO,\n                \"to\":friC,\n            },\n            {\n                \"dayOfWeek\":6,\n                \"from\":satO,\n                \"to\":satC,\n            },\n            {\n                \"dayOfWeek\":7,\n                \"from\":sunO,\n                \"to\":sunC,\n            },\n\n        ]\n\n        let owner = user.id\n        let cuisine = parseInt(typeSelected)\n        let restaurantTypesList = [{id:cuisine}]\n        let item={owner, name, city, address, phoneNumber, email, voivodeship, openingTimes, restaurantTypesList}\n        console.warn(item)\n\n        let result = await fetch(\"http://creator.azurewebsites.net/restaurant/update/\",{\n            method:'POST',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            navigate('/')\n        }\n        else{\n            console.warn(result) \n            console.warn(result.errorList) \n            console.warn(type)   \n        }\n    }\n\n    return(\n        <div>\n            <Header/>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                <Col sm={12} md={10}>\n                        <Link to=\"/manage/restaurant\">\n                            <Button className='float-start ' variant='danger'><FontAwesomeIcon icon={faChevronLeft} /></Button>\n                        </Link>\n                    </Col>\n                    <Col sm={12}><h2>Dodaj restauracjÄ™</h2></Col> \n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa restauracji</Form.Label>\n                                <Form.Control type=\"input\" value={name} onChange={(e)=>setName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={8}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ kuchni</Form.Label>\n                                <Form.Select aria-label=\"Default select example\" value={typeSelected} onChange={(e)=>setTypeSelected(e.target.value)}>\n                                    <option>Wybierz</option>\n                                    {\n                                        type.map((opt)=>\n                                            <option key={opt.id} value={opt.name}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Numer telefonu</Form.Label>\n                                <Form.Control type=\"input\" value={phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres email</Form.Label>\n                                <Form.Control type=\"input\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Adres</Form.Label>\n                                <Form.Control type=\"input\" value={address} onChange={(e)=>setAddress(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={2}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Miasto</Form.Label>\n                                <Form.Control type=\"input\" value={city} onChange={(e)=>setCity(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={3}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">WojewÃ³dztwo</Form.Label>\n                                <Form.Select value={voivodeship} onChange={(e)=>setVoivodeship(e.target.value)}>\n                                    <option value=\"\">Wybierz</option>\n                                    {\n                                        voivodeshipList.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                        )\n                                    }\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                           <h5 className=\"mt-2\">Godziny otwarcia</h5>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">PoniedziaÅ‚ek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                    <Col sm={5}><Form.Control type=\"time\" value={monO} onChange={(e)=>setMonO(e.target.value)}/></Col>\n                                    -\n                                    <Col sm={5}><Form.Control type=\"time\" value={monC} onChange={(e)=>setMonC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Wtorek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={tueO} onChange={(e)=>setTueO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={tueC} onChange={(e)=>setTueC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Åšroda</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={wedO} onChange={(e)=>setWedO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={wedC} onChange={(e)=>setWedC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Czwartek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={thuO} onChange={(e)=>setThuO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={thuC} onChange={(e)=>setThuC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">PiÄ…tek</Form.Label>\n                                <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={friO} onChange={(e)=>setFriO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={friC} onChange={(e)=>setFriC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                            <Form.Label className=\"float-start\">Sobota</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={satO} onChange={(e)=>setSatO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={satC} onChange={(e)=>setSatC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Niedziela</Form.Label>\n                            <Row className=\"justify-content-center\">\n                                <Col sm={5}><Form.Control type=\"time\" value={sunO} onChange={(e)=>setSunO(e.target.value)}/></Col>\n                                -\n                                <Col sm={5}><Form.Control type=\"time\" value={sunC} onChange={(e)=>setSunC(e.target.value)}/></Col>\n                                </Row>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default EditRestaurant","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItemToMenu.js",["142","143"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddItem.js",["144","145","146","147"],[],"import { Col, Container, Row, Form, Button, Modal, Alert} from \"react-bootstrap\";\nimport {useNavigate} from 'react-router-dom';\nimport React, {useEffect, useState} from \"react\";\n\nfunction AddItem()\n{\n    \n    let navigate = useNavigate();\n    let user = JSON.parse(localStorage.getItem('user-info'))\n    const [title, setTitle]=useState(\"\")\n    const [desc, setDesc]=useState(\"Bardzo smaczna potrawa\")\n    const [quantity, setQuantity]=useState(\"\")\n    const [prices, setPrices]=useState(\"\")\n    const [unit, setUnit]=useState(\"\")\n    const [restaurants, setRestaurants]=useState([])\n    const [restaurantId, setRestaurantId]=useState(\"\")\n    const [items, setItems]=useState([])\n    const [itemType, setItemType]=useState(\"\")\n\n    const [show, setShow] = useState(false);\n    const [errorMessage, setErrorMessage]=useState([])\n\n    const handleClose = () => setShow(false);\n\n    useEffect (()=>{\n        async function fetchData(){\n        let data = await fetch(\"http://creator.azurewebsites.net/restaurant/get-restaurants?ownerId=\" + user.id);\n            data = await data.json()\n            data = data.value\n            setRestaurants(data)\n        }\n        async function fetchItemTypeData(){\n            let data = await fetch(\"http://creator.azurewebsites.net/item/get-item-types\");\n                data = await data.json()\n                data = data.value\n                setItems(data)\n            }\n        fetchData()\n        fetchItemTypeData()\n    },[]);\n\n    async function create(){\n        let price = parseFloat(prices.replace(',', '.'))\n        let item={title, desc, quantity, price, unit, restaurantId, itemType}\n        let result = await fetch(\"http://creator.azurewebsites.net/item/create/\",{\n            method:'PUT',\n            body:JSON.stringify(item),\n            headers:{\n                \"Content-Type\":'application/json',\n            }\n        })\n\n        result = await result.json()\n        \n        if(result.status === 1){\n            alert(\"Dodano pomyÅ›lnie!\");\n            window.location.reload(false);\n        }\n        else{\n            errorMessage.length=0\n            errorMessage.push(result.errorList.title)\n            errorMessage.push(result.errorList.quantity)\n            errorMessage.push(result.errorList.price)\n            errorMessage.push(result.errorList.unit)\n            setShow(true)\n        }\n    }\n\n    return(\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>BÅ‚Ä…d</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    { errorMessage && errorMessage.length?\n                    errorMessage.map((item) => <p>{item}</p>) \n                    :<p>BÅ‚Ä™dne dane</p>\n                    }\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={handleClose}>\n                            Zamknij\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            <Container>\n                <Row className=\"justify-content-center mt-5\">\n                    <Col sm={12}><h2>Dodaj pozycjÄ™ menu</h2></Col> \n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Nazwa</Form.Label>\n                                <Form.Control type=\"input\" value={title} onChange={(e)=>setTitle(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Cena</Form.Label>\n                                <Form.Control type=\"input\" value={prices} onChange={(e)=>setPrices(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Waga</Form.Label>\n                                <Form.Control type=\"input\" value={quantity} onChange={(e)=>setQuantity(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Jednostka</Form.Label>\n                                <Form.Control type=\"input\" value={unit} onChange={(e)=>setUnit(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Restauracja</Form.Label>\n                                <Form.Select value={restaurantId} onChange={(e)=>setRestaurantId(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                { restaurants.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={4}>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Typ</Form.Label>\n                                <Form.Select value={itemType} onChange={(e)=>setItemType(e.target.value)}>\n                                <option value=\"\">Wybierz</option>\n                                { items.map((opt)=>\n                                            <option key={opt.id} value={opt.id}>{opt.name}</option>\n                                )}\n                                </Form.Select>\n                            </Form.Group>\n                        </Col>\n                        <div className=\"clearfix\"></div>\n                        <Col sm={12} md={8}>\n                        <Form.Group className=\"mb-3\">\n                                <Form.Label className=\"float-start\">Opis</Form.Label>\n                                <Form.Control as=\"textarea\" rows={3} value={desc} onChange={(e)=>setDesc(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                       \n                        <Col sm={12}>\n                        <Button variant=\"danger\" className=\"mb-5\" onClick={create}>\n                            Dodaj\n                        </Button>\n                        </Col>\n                </Row>\n            </Container> \n        </div>\n    )\n}\n\nexport default AddItem","/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Manage/Menu/AddMenu.js",["148","149","150"],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Basket.js",[],[],"/Users/durpat/restaurant-creator/Restaurant-Creator_UI/src/Product.js",[],[],{"ruleId":"151","severity":1,"message":"152","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":18},{"ruleId":"151","severity":1,"message":"155","line":10,"column":9,"nodeType":"153","messageId":"154","endLine":10,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":33,"column":7,"nodeType":"158","endLine":33,"endColumn":9,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"160","line":5,"column":26,"nodeType":"153","messageId":"154","endLine":5,"endColumn":35},{"ruleId":"151","severity":1,"message":"160","line":3,"column":16,"nodeType":"153","messageId":"154","endLine":3,"endColumn":25},{"ruleId":"151","severity":1,"message":"161","line":9,"column":9,"nodeType":"153","messageId":"154","endLine":9,"endColumn":13},{"ruleId":"151","severity":1,"message":"162","line":13,"column":12,"nodeType":"153","messageId":"154","endLine":13,"endColumn":24},{"ruleId":"151","severity":1,"message":"163","line":13,"column":26,"nodeType":"153","messageId":"154","endLine":13,"endColumn":41},{"ruleId":"156","severity":1,"message":"164","line":71,"column":7,"nodeType":"158","endLine":71,"endColumn":9,"suggestions":"165"},{"ruleId":"151","severity":1,"message":"166","line":10,"column":9,"nodeType":"153","messageId":"154","endLine":10,"endColumn":17},{"ruleId":"156","severity":1,"message":"167","line":26,"column":7,"nodeType":"158","endLine":26,"endColumn":9,"suggestions":"168"},{"ruleId":"151","severity":1,"message":"169","line":26,"column":26,"nodeType":"153","messageId":"154","endLine":26,"endColumn":41},{"ruleId":"156","severity":1,"message":"170","line":46,"column":7,"nodeType":"158","endLine":46,"endColumn":9,"suggestions":"171"},{"ruleId":"151","severity":1,"message":"172","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":19},{"ruleId":"151","severity":1,"message":"166","line":12,"column":9,"nodeType":"153","messageId":"154","endLine":12,"endColumn":17},{"ruleId":"151","severity":1,"message":"173","line":15,"column":12,"nodeType":"153","messageId":"154","endLine":15,"endColumn":24},{"ruleId":"151","severity":1,"message":"174","line":15,"column":26,"nodeType":"153","messageId":"154","endLine":15,"endColumn":41},{"ruleId":"156","severity":1,"message":"170","line":34,"column":7,"nodeType":"158","endLine":34,"endColumn":9,"suggestions":"175"},{"ruleId":"151","severity":1,"message":"169","line":38,"column":26,"nodeType":"153","messageId":"154","endLine":38,"endColumn":41},{"ruleId":"176","severity":1,"message":"177","line":61,"column":21,"nodeType":"178","messageId":"179","endLine":66,"endColumn":23},{"ruleId":"156","severity":1,"message":"180","line":90,"column":7,"nodeType":"158","endLine":90,"endColumn":9,"suggestions":"181"},{"ruleId":"151","severity":1,"message":"166","line":8,"column":9,"nodeType":"153","messageId":"154","endLine":8,"endColumn":17},{"ruleId":"156","severity":1,"message":"170","line":49,"column":7,"nodeType":"158","endLine":49,"endColumn":9,"suggestions":"182"},{"ruleId":"151","severity":1,"message":"183","line":1,"column":52,"nodeType":"153","messageId":"154","endLine":1,"endColumn":57},{"ruleId":"151","severity":1,"message":"166","line":8,"column":9,"nodeType":"153","messageId":"154","endLine":8,"endColumn":17},{"ruleId":"151","severity":1,"message":"169","line":21,"column":26,"nodeType":"153","messageId":"154","endLine":21,"endColumn":41},{"ruleId":"156","severity":1,"message":"170","line":40,"column":7,"nodeType":"158","endLine":40,"endColumn":9,"suggestions":"184"},{"ruleId":"151","severity":1,"message":"166","line":8,"column":9,"nodeType":"153","messageId":"154","endLine":8,"endColumn":17},{"ruleId":"151","severity":1,"message":"185","line":10,"column":23,"nodeType":"153","messageId":"154","endLine":10,"endColumn":35},{"ruleId":"156","severity":1,"message":"170","line":39,"column":7,"nodeType":"158","endLine":39,"endColumn":9,"suggestions":"186"},"no-unused-vars","'faSearch' is defined but never used.","Identifier","unusedVar","'today' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city' and 'restaurants'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","'typeSelected' is assigned a value but never used.","'setTypeSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'navigate', and 'restaurant'. Either include them or remove the dependency array.",["188"],"'navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'restaurants' and 'user.id'. Either include them or remove the dependency array.",["189"],"'setErrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["190"],"'AddEmployee' is defined but never used.","'restaurantId' is assigned a value but never used.","'setRestaurantId' is assigned a value but never used.",["191"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["192"],["193"],"'Alert' is defined but never used.",["194"],"'setCreatorId' is assigned a value but never used.",["195"],{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"205","fix":"206"},{"desc":"202","fix":"207"},{"desc":"202","fix":"208"},{"desc":"202","fix":"209"},"Update the dependencies array to be: [city, restaurants]",{"range":"210","text":"211"},"Update the dependencies array to be: [id, navigate, restaurant]",{"range":"212","text":"213"},"Update the dependencies array to be: [restaurants, user.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [user.id]",{"range":"216","text":"217"},{"range":"218","text":"217"},"Update the dependencies array to be: [id, navigate]",{"range":"219","text":"220"},{"range":"221","text":"217"},{"range":"222","text":"217"},{"range":"223","text":"217"},[980,982],"[city, restaurants]",[2376,2378],"[id, navigate, restaurant]",[968,970],"[restaurants, user.id]",[1726,1728],"[user.id]",[1351,1353],[3736,3738],"[id, navigate]",[1788,1790],[1467,1469],[1360,1362]]